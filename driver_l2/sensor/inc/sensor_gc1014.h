#ifndef __DRV_SENSOR_GC1014_H__
#define __DRV_SENSOR_GC1014_H__

/****************************************************************************/
#include "project.h"
#include "drv_l2_sensor.h"


/****************************************************************************/
#if (USE_SENSOR_NAME == SENSOR_GC1014)

extern void gp_Cdsp_SetAWBYUV(const INT16S *AwbTable);
extern void gp_Cdsp_SetBadPixOb(const INT16U *OBTable);
void gc1014_set_exposure_gain(void);

#define GC_48MHZ							800
#define GC_42MHZ							810
//#define GC_PCLK								GC_48MHZ

#define GC1014_MAX_EXPOSURE_TIME			(904)
#define GC1014_MIN_EXPOSURE_TIME			(8)

#define GC1014_MAX_ANALOG_GAIN				(8*100)
#define GC1014_MIN_ANALOG_GAIN				(1*100)

#define GC1014_MAX_DIGITAL_GAIN				(140)//(1.4*100)
#define GC1014_MIN_DIGITAL_GAIN 			(140)//0x100:1x //SENSOR_GC1014

#define GC1014_SLAVE_ID						0x78

//#if (GC_PCLK == GC_48MHZ)
#define GC1014_50HZ_EXP_TIME_TOTAL_48MHz			209
#define	GC1014_50HZ_INIT_EV_IDX_48MHz				130
#define GC1014_50HZ_NIGHT_EV_IDX_48MHz				156
#define GC1014_50HZ_DAY_EV_IDX_48MHz				96
#define GC1014_50HZ_MAX_EXP_IDX_48MHz				(GC1014_50HZ_EXP_TIME_TOTAL_48MHz-6)  // <= GC1014_50HZ_EXP_TIME_TOTAL

#define GC1014_60HZ_EXP_TIME_TOTAL_48MHz			197
#define	GC1014_60HZ_INIT_EV_IDX_48MHz				122
#define GC1014_60HZ_NIGHT_EV_IDX_48MHz				149
#define GC1014_60HZ_DAY_EV_IDX_48MHz				96
#define GC1014_60HZ_MAX_EXP_IDX_48MHz				(GC1014_60HZ_EXP_TIME_TOTAL_48MHz-1)  // <= GC1014_60HZ_EXP_TIME_TOTAL

//#else //GC 42Mhz

#define GC1014_50HZ_EXP_TIME_TOTAL_42MHz			203
#define	GC1014_50HZ_INIT_EV_IDX_42MHz				120
#define GC1014_50HZ_NIGHT_EV_IDX_42MHz				140
#define GC1014_50HZ_DAY_EV_IDX_42MHz				96
#define GC1014_50HZ_MAX_EXP_IDX_42MHz				(GC1014_50HZ_EXP_TIME_TOTAL_42MHz-20)  // <= GC1014_50HZ_EXP_TIME_TOTAL

#define GC1014_60HZ_EXP_TIME_TOTAL_42MHz			198
#define	GC1014_60HZ_INIT_EV_IDX_42MHz				122
#define GC1014_60HZ_NIGHT_EV_IDX_42MHz				149
#define GC1014_60HZ_DAY_EV_IDX_42MHz				96
#define GC1014_60HZ_MAX_EXP_IDX_42MHz				(GC1014_60HZ_EXP_TIME_TOTAL_42MHz-15)  // <= GC1014_60HZ_EXP_TIME_TOTAL
//#endif

#define GC1014_GC_AE			0	//1:With new AE Table & Can switch 48MHz/42MHz, 0:With old AE Table, Can'nt switch 48/42MHz

/**************************************************************************
 *                         G L O B A L    D A T A  For CDSP using                          *
 **************************************************************************/

static const short g_GC1014_badpix_ob_table[12] = 
{
	0, 		// obautoen
	0, 		// obmanuen
	8, 		// maunob
	
	0, 		// wboffseten
	4,		// wbo_r
	0, 		// wbo_gr
	0, 		// wbo_gb
	4, 		// wbo_b
	
	1,		//badPixel En
	160,	//bprthr
	160,	//bpgthr
	160		//bpbthr
};


static const unsigned short g_GC1014_r_b_gain[71][2] =
{ // { r gain, b gain }

{38,132},  //
{40,130},    
{42,127},    
{44,125},    
{45,123},    
{47,121},    
{49,120},    
{51,118},    
{52,116},    
{54,114},    
{56,112},    
{57,110},    
{59,109},    
{60,107},    
{62,105},    
{63,104},    
{65,102},    
{66,101},    
{68,99 },    
{69,98 },    
{70,96 },//40
{72,95 },    
{73,93 },    
{74,92 },    
{75,91 },    
{76,89 },    
{77,88 },    
{78,87 },    
{79,86 },    
{80,85 },    
{81,83 },//50
{82,82 },    
{83,81 },    
{84,80 },    
{85,79 },    
{86,78 },    
{86,78 },    
{87,77 },    
{88,76 },    
{88,75 },    
{89,74 },//60
{90,74 },    
{90,73 },    
{91,72 },    
{91,72 },    
{92,71 },    
{92,70 },    
{92,70 },    
{93,69 },    
{93,69 },    
{93,69 },//70
{94,68 },    
{94,68 },    
{94,68 },    
{94,67 },    
{94,67 },    
{94,67 },    
{94,67 },    
{94,66 },    
{94,66 },    
{94,66 },    
{94,66 },    
{94,66 },    
{94,66 },    
{94,66 },    
{93,66 },    
{93,67 },    
{93,67 },    
{92,67 },    
{92,67 },    
{92,67 } 
               
};


static const unsigned int g_GC1014_gamma_045_table[] = 	//2014.10.03.David
{
0x04510d, 0x051112, 0x111417, 0x14451b, 0x111120, 0x044425, 0x111129, 0x05112d, 
0x044432, 0x044436, 0x04443a, 0x04443e, 0x044442, 0x110446, 0x111149, 0x04444d, 
0x111051, 0x044154, 0x111058, 0x10445b, 0x04415e, 0x011062, 0x011065, 0x010468, 
0x01046b, 0x01046e, 0x041071, 0x041074, 0x104176, 0x010479, 0x04107c, 0x00417e, 
0x041081, 0x010183, 0x101086, 0x040488, 0x01018a, 0x10408d, 0x10108f, 0x041091, 
0x040493, 0x040495, 0x040497, 0x040499, 0x10109b, 0x00109d, 0x00409f, 0x0101a0, 
0x1004a2, 0x0010a4, 0x0100a6, 0x1004a7, 0x0040a9, 0x1001aa, 0x0040ac, 0x1001ad, 
0x0100af, 0x0004b0, 0x0400b2, 0x0040b3, 0x0004b4, 0x0400b6, 0x0100b7, 0x0010b8, 
0x0004b9, 0x1000bb, 0x0400bc, 0x0100bd, 0x0040be, 0x0010bf, 0x0004c0, 0x0004c1, 
0x0001c2, 0x0001c3, 0x0000c5, 0x0000c6, 0x0000c7, 0x0000c8, 0x0000c9, 0x0000ca, 
0x0000cb, 0x0000cc, 0x0000cd, 0x0000ce, 0x0000cf, 0x0000d0, 0x0001d0, 0x0001d1, 
0x0001d2, 0x0001d3, 0x0001d4, 0x0001d5, 0x0001d6, 0x0001d7, 0x0001d8, 0x0001d9, 
0x0000db, 0x0000dc, 0x1000dd, 0x0400de, 0x0400df, 0x0100e0, 0x0040e1, 0x0010e2, 
0x0004e3, 0x1000e5, 0x0100e6, 0x0040e7, 0x0004e8, 0x1000ea, 0x0100eb, 0x0004ec, 
0x0400ee, 0x0040ef, 0x1001f0, 0x0040f2, 0x1004f3, 0x0040f5, 0x0401f6, 0x0010f8, 
0x0100fa, 0x0404fb, 0x1010fd, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff
};


static const short g_GC1014_color_matrix4gamma045[9] =
{
	(short) ((1.34627909082120150000 *64) + 0.5),  
	(short) ((-0.5690313511658132700 *64) + 0.5),  
	(short) ((0.22275226034461179000 *64) + 0.5),  
	(short) ((-0.1624580191655938800 *64) + 0.5),  
	(short) ((1.29492708727274230000 *64) + 0.5),  
	(short) ((-0.1324690681071482900 *64) + 0.5),  
	(short) ((0.08428816584347188800 *64) + 0.5),  
	(short) ((-0.9602908038404544000 *64) + 0.5),  
	(short) ((1.87600263799698230000 *64) + 0.5)   
};

static const short g_GC1014_awb_thr[19] =  
{
	210, // awbwinthr
	
	0*64, // sindata
	1*64, // cosdata 
	
	 30, // Ythr0
	 80, // Ythr1
	150, // Ythr2 
	210, // Ythr3 

	-4, // UL1N1  //AWB-first
	 4, // UL1P1 
	-3, // VL1N1 
	 3, // VL1P1 
	
	 -5, //UL1N2
	  5, //UL1P2
	 -4, //VL1N2
	  4, // VL1P2
	
	 -5, // UL1N3
	  5, //UL1P3
	 -6, // VL1N3
	  6, //VL1P3
	

};


INT8U g_GC1014_LiTable_rgb[48]=
{	//R*16,Gb/Gr*16,B*16
	0x1e,0x2e,0x3e,0x4e,0x5e,0x6e,0x7e,0x8e,
	0x9e,0xae,0xbe,0xce,0xde,0xee,0xfe,0xff,
	0x0f,0x1f,0x2f,0x3f,0x4f,0x5f,0x6f,0x7f,
	0x8f,0x9f,0xaf,0xbf,0xcf,0xdf,0xef,0xff,
	0x07,0x17,0x27,0x37,0x47,0x57,0x67,0x77,
	0x87,0x97,0xa7,0xb7,0xc7,0xd7,0xe7,0xf7
};

INT16U g_GC1014_MaxTan8[32]=
{
	0x054,
	0x310,
	0x244,
	0x071,
	0x0e1,
	0x123,
	0x189,
	0x0a7,
	0x06c,
	0x260,
	0x23a,
	0x073,
	0x0b6,
	0x167,
	0x17f,
	0x0ab,
	0x065,
	0x28b,
	0x252,
	0x06e,
	0x0bf,
	0x156,
	0x178,
	0x0ae,
	0x06d,
	0x25b,
	0x236,
	0x074,
	0x0b6,
	0x169,
	0x181,
	0x0aa
};

INT16U g_GC1014_Slope4[16]=
{
	0x310,
	0x244,
	0x189,
	0x123,
	0x260,
	0x23a,
	0x17f,
	0x167,
	0x28b,
	0x252,
	0x178,
	0x156,
	0x25b,
	0x236,
	0x181,
	0x169
};

INT16U g_GC1014_CLPoint[8]=		//Sensor Center is Weight/2, Hight/2 for RGB
{
	0x2df,
	0x0f0,
	0x294,
	0x116,
	0x29d,
	0x107,
	0x294,
	0x118
};

INT16U g_GC1014_Radius_File_0[512]=
{
	0x134,
	0x134,
	0x134,
	0x134,
	0x134,
	0x134,
	0x134,
	0x134,
	0x159,
	0x144,
	0x12b,
	0x12e,
	0x150,
	0x15b,
	0x176,
	0x181,
	0x17e,
	0x159,
	0x12b,
	0x138,
	0x15b,
	0x16b,
	0x19a,
	0x1a9,
	0x1a3,
	0x17c,
	0x12b,
	0x143,
	0x162,
	0x1a4,
	0x19a,
	0x1be,
	0x1b1,
	0x17d,
	0x12b,
	0x143,
	0x162,
	0x1b0,
	0x19a,
	0x1c7,
	0x1b6,
	0x161,
	0x12b,
	0x143,
	0x162,
	0x1b0,
	0x19a,
	0x1e3,
	0x1b6,
	0x161,
	0x12b,
	0x143,
	0x162,
	0x1b0,
	0x19a,
	0x1dd,
	0x1b6,
	0x161,
	0x12b,
	0x143,
	0x162,
	0x1b0,
	0x19a,
	0x1dd,
	0x1b6,
	0x161,
	0x12b,
	0x143,
	0x162,
	0x1b0,
	0x19a,
	0x1dd,
	0x1b6,
	0x161,
	0x12b,
	0x143,
	0x162,
	0x1b0,
	0x19a,
	0x1dd,
	0x1b6,
	0x161,
	0x12b,
	0x143,
	0x162,
	0x1b0,
	0x19a,
	0x1dd,
	0x1b6,
	0x161,
	0x12b,
	0x143,
	0x162,
	0x1b0,
	0x19a,
	0x1dd,
	0x1b6,
	0x161,
	0x12b,
	0x143,
	0x162,
	0x1b0,
	0x19a,
	0x1dd,
	0x1b6,
	0x161,
	0x12b,
	0x143,
	0x162,
	0x1b0,
	0x19a,
	0x1dd,
	0x1b6,
	0x161,
	0x12b,
	0x143,
	0x162,
	0x1b0,
	0x19a,
	0x1dd,
	0x1b6,
	0x161,
	0x12b,
	0x143,
	0x162,
	0x1b0,
	0x19a,
	0x1dd,
	0x120,
	0x120,
	0x120,
	0x120,
	0x120,
	0x120,
	0x120,
	0x120,
	0x13e,
	0x12a,
	0x10d,
	0x124,
	0x126,
	0x12f,
	0x145,
	0x149,
	0x154,
	0x13e,
	0x10d,
	0x126,
	0x138,
	0x14b,
	0x15b,
	0x16c,
	0x164,
	0x14f,
	0x10d,
	0x13b,
	0x152,
	0x175,
	0x15b,
	0x176,
	0x173,
	0x127,
	0x10d,
	0x142,
	0x152,
	0x1a6,
	0x15b,
	0x187,
	0x173,
	0x127,
	0x10d,
	0x142,
	0x152,
	0x17f,
	0x15b,
	0x17b,
	0x173,
	0x127,
	0x10d,
	0x142,
	0x152,
	0x17f,
	0x15b,
	0x17b,
	0x173,
	0x127,
	0x10d,
	0x142,
	0x152,
	0x17f,
	0x15b,
	0x17b,
	0x173,
	0x127,
	0x10d,
	0x142,
	0x152,
	0x17f,
	0x15b,
	0x17b,
	0x173,
	0x127,
	0x10d,
	0x142,
	0x152,
	0x17f,
	0x15b,
	0x17b,
	0x173,
	0x127,
	0x10d,
	0x142,
	0x152,
	0x17f,
	0x15b,
	0x17b,
	0x173,
	0x127,
	0x10d,
	0x142,
	0x152,
	0x17f,
	0x15b,
	0x17b,
	0x173,
	0x127,
	0x10d,
	0x142,
	0x152,
	0x17f,
	0x15b,
	0x17b,
	0x173,
	0x127,
	0x10d,
	0x142,
	0x152,
	0x17f,
	0x15b,
	0x17b,
	0x173,
	0x127,
	0x10d,
	0x142,
	0x152,
	0x17f,
	0x15b,
	0x17b,
	0x173,
	0x127,
	0x10d,
	0x142,
	0x152,
	0x17f,
	0x15b,
	0x17b,
	0x130,
	0x130,
	0x130,
	0x130,
	0x130,
	0x130,
	0x130,
	0x130,
	0x145,
	0x138,
	0x118,
	0x12a,
	0x134,
	0x140,
	0x15c,
	0x158,
	0x16b,
	0x151,
	0x118,
	0x136,
	0x151,
	0x153,
	0x17a,
	0x183,
	0x194,
	0x169,
	0x118,
	0x13e,
	0x156,
	0x17b,
	0x17a,
	0x19b,
	0x182,
	0x134,
	0x118,
	0x150,
	0x156,
	0x1c4,
	0x17a,
	0x1b7,
	0x182,
	0x134,
	0x118,
	0x150,
	0x156,
	0x18e,
	0x17a,
	0x1a8,
	0x182,
	0x134,
	0x118,
	0x150,
	0x156,
	0x18e,
	0x17a,
	0x1a8,
	0x182,
	0x134,
	0x118,
	0x150,
	0x156,
	0x18e,
	0x17a,
	0x1a8,
	0x182,
	0x134,
	0x118,
	0x150,
	0x156,
	0x18e,
	0x17a,
	0x1a8,
	0x182,
	0x134,
	0x118,
	0x150,
	0x156,
	0x18e,
	0x17a,
	0x1a8,
	0x182,
	0x134,
	0x118,
	0x150,
	0x156,
	0x18e,
	0x17a,
	0x1a8,
	0x182,
	0x134,
	0x118,
	0x150,
	0x156,
	0x18e,
	0x17a,
	0x1a8,
	0x182,
	0x134,
	0x118,
	0x150,
	0x156,
	0x18e,
	0x17a,
	0x1a8,
	0x182,
	0x134,
	0x118,
	0x150,
	0x156,
	0x18e,
	0x17a,
	0x1a8,
	0x182,
	0x134,
	0x118,
	0x150,
	0x156,
	0x18e,
	0x17a,
	0x1a8,
	0x182,
	0x134,
	0x118,
	0x150,
	0x156,
	0x18e,
	0x17a,
	0x1a8,
	0x11f,
	0x11f,
	0x11f,
	0x11f,
	0x11f,
	0x11f,
	0x11f,
	0x11f,
	0x148,
	0x128,
	0x115,
	0x127,
	0x12b,
	0x138,
	0x145,
	0x14c,
	0x165,
	0x14e,
	0x115,
	0x131,
	0x140,
	0x157,
	0x15d,
	0x17c,
	0x17b,
	0x165,
	0x115,
	0x14e,
	0x161,
	0x180,
	0x15d,
	0x190,
	0x191,
	0x134,
	0x115,
	0x151,
	0x161,
	0x1e5,
	0x15d,
	0x1a0,
	0x191,
	0x134,
	0x115,
	0x151,
	0x161,
	0x196,
	0x15d,
	0x195,
	0x191,
	0x134,
	0x115,
	0x151,
	0x161,
	0x196,
	0x15d,
	0x195,
	0x191,
	0x134,
	0x115,
	0x151,
	0x161,
	0x196,
	0x15d,
	0x195,
	0x191,
	0x134,
	0x115,
	0x151,
	0x161,
	0x196,
	0x15d,
	0x195,
	0x191,
	0x134,
	0x115,
	0x151,
	0x161,
	0x196,
	0x15d,
	0x195,
	0x191,
	0x134,
	0x115,
	0x151,
	0x161,
	0x196,
	0x15d,
	0x195,
	0x191,
	0x134,
	0x115,
	0x151,
	0x161,
	0x196,
	0x15d,
	0x195,
	0x191,
	0x134,
	0x115,
	0x151,
	0x161,
	0x196,
	0x15d,
	0x195,
	0x191,
	0x134,
	0x115,
	0x151,
	0x161,
	0x196,
	0x15d,
	0x195,
	0x191,
	0x134,
	0x115,
	0x151,
	0x161,
	0x196,
	0x15d,
	0x195,
	0x191,
	0x134,
	0x115,
	0x151,
	0x161,
	0x196,
	0x15d,
    0x195
};

INT16U g_GC1014_Radius_File_1[512]=
{
	0x14c,
	0x13d,
	0x12b,
	0x137,
	0x147,
	0x153,
	0x15e,
	0x153,
	0x16e,
	0x150,
	0x12b,
	0x13b,
	0x157,
	0x15d,
	0x189,
	0x183,
	0x18b,
	0x16e,
	0x12b,
	0x138,
	0x162,
	0x181,
	0x19a,
	0x1b1,
	0x1ae,
	0x175,
	0x12b,
	0x143,
	0x162,
	0x1dc,
	0x19a,
	0x1c5,
	0x1b6,
	0x179,
	0x12b,
	0x143,
	0x162,
	0x1b0,
	0x19a,
	0x1db,
	0x1b6,
	0x161,
	0x12b,
	0x143,
	0x162,
	0x1b0,
	0x19a,
	0x1db,
	0x1b6,
	0x161,
	0x12b,
	0x143,
	0x162,
	0x1b0,
	0x19a,
	0x1dd,
	0x1b6,
	0x161,
	0x12b,
	0x143,
	0x162,
	0x1b0,
	0x19a,
	0x1dd,
	0x1b6,
	0x161,
	0x12b,
	0x143,
	0x162,
	0x1b0,
	0x19a,
	0x1dd,
	0x1b6,
	0x161,
	0x12b,
	0x143,
	0x162,
	0x1b0,
	0x19a,
	0x1dd,
	0x1b6,
	0x161,
	0x12b,
	0x143,
	0x162,
	0x1b0,
	0x19a,
	0x1dd,
	0x1b6,
	0x161,
	0x12b,
	0x143,
	0x162,
	0x1b0,
	0x19a,
	0x1dd,
	0x1b6,
	0x161,
	0x12b,
	0x143,
	0x162,
	0x1b0,
	0x19a,
	0x1dd,
	0x1b6,
	0x161,
	0x12b,
	0x143,
	0x162,
	0x1b0,
	0x19a,
	0x1dd,
	0x1b6,
	0x161,
	0x12b,
	0x143,
	0x162,
	0x1b0,
	0x19a,
	0x1dd,
	0x1b6,
	0x161,
	0x12b,
	0x143,
	0x162,
	0x1b0,
	0x19a,
	0x1dd,
	0x12e,
	0x125,
	0x112,
	0x120,
	0x11e,
	0x12a,
	0x13e,
	0x139,
	0x14e,
	0x12d,
	0x10d,
	0x128,
	0x12f,
	0x13e,
	0x15b,
	0x15d,
	0x167,
	0x144,
	0x10d,
	0x131,
	0x146,
	0x156,
	0x15b,
	0x176,
	0x173,
	0x151,
	0x10d,
	0x142,
	0x152,
	0x17f,
	0x15b,
	0x17d,
	0x173,
	0x127,
	0x10d,
	0x142,
	0x152,
	0x17f,
	0x15b,
	0x188,
	0x173,
	0x127,
	0x10d,
	0x142,
	0x152,
	0x17f,
	0x15b,
	0x17b,
	0x173,
	0x127,
	0x10d,
	0x142,
	0x152,
	0x17f,
	0x15b,
	0x17b,
	0x173,
	0x127,
	0x10d,
	0x142,
	0x152,
	0x17f,
	0x15b,
	0x17b,
	0x173,
	0x127,
	0x10d,
	0x142,
	0x152,
	0x17f,
	0x15b,
	0x17b,
	0x173,
	0x127,
	0x10d,
	0x142,
	0x152,
	0x17f,
	0x15b,
	0x17b,
	0x173,
	0x127,
	0x10d,
	0x142,
	0x152,
	0x17f,
	0x15b,
	0x17b,
	0x173,
	0x127,
	0x10d,
	0x142,
	0x152,
	0x17f,
	0x15b,
	0x17b,
	0x173,
	0x127,
	0x10d,
	0x142,
	0x152,
	0x17f,
	0x15b,
	0x17b,
	0x173,
	0x127,
	0x10d,
	0x142,
	0x152,
	0x17f,
	0x15b,
	0x17b,
	0x173,
	0x127,
	0x10d,
	0x142,
	0x152,
	0x17f,
	0x15b,
	0x17b,
	0x173,
	0x127,
	0x10d,
	0x142,
	0x152,
	0x17f,
	0x15b,
	0x17b,
	0x136,
	0x130,
	0x118,
	0x128,
	0x128,
	0x138,
	0x14b,
	0x147,
	0x15e,
	0x148,
	0x118,
	0x130,
	0x13d,
	0x145,
	0x16e,
	0x16e,
	0x18e,
	0x157,
	0x118,
	0x13e,
	0x150,
	0x170,
	0x17a,
	0x189,
	0x182,
	0x16e,
	0x118,
	0x150,
	0x156,
	0x1a0,
	0x17a,
	0x1a6,
	0x182,
	0x134,
	0x118,
	0x150,
	0x156,
	0x18e,
	0x17a,
	0x1b6,
	0x182,
	0x134,
	0x118,
	0x150,
	0x156,
	0x18e,
	0x17a,
	0x1a8,
	0x182,
	0x134,
	0x118,
	0x150,
	0x156,
	0x18e,
	0x17a,
	0x1a8,
	0x182,
	0x134,
	0x118,
	0x150,
	0x156,
	0x18e,
	0x17a,
	0x1a8,
	0x182,
	0x134,
	0x118,
	0x150,
	0x156,
	0x18e,
	0x17a,
	0x1a8,
	0x182,
	0x134,
	0x118,
	0x150,
	0x156,
	0x18e,
	0x17a,
	0x1a8,
	0x182,
	0x134,
	0x118,
	0x150,
	0x156,
	0x18e,
	0x17a,
	0x1a8,
	0x182,
	0x134,
	0x118,
	0x150,
	0x156,
	0x18e,
	0x17a,
	0x1a8,
	0x182,
	0x134,
	0x118,
	0x150,
	0x156,
	0x18e,
	0x17a,
	0x1a8,
	0x182,
	0x134,
	0x118,
	0x150,
	0x156,
	0x18e,
	0x17a,
	0x1a8,
	0x182,
	0x134,
	0x118,
	0x150,
	0x156,
	0x18e,
	0x17a,
	0x1a8,
	0x182,
	0x134,
	0x118,
	0x150,
	0x156,
	0x18e,
	0x17a,
	0x1a8,
	0x131,
	0x120,
	0x111,
	0x11d,
	0x124,
	0x127,
	0x145,
	0x141,
	0x152,
	0x138,
	0x115,
	0x12a,
	0x138,
	0x13a,
	0x15d,
	0x16b,
	0x173,
	0x155,
	0x115,
	0x13e,
	0x158,
	0x15b,
	0x15d,
	0x180,
	0x191,
	0x174,
	0x115,
	0x151,
	0x161,
	0x19a,
	0x15d,
	0x197,
	0x191,
	0x134,
	0x115,
	0x151,
	0x161,
	0x196,
	0x15d,
	0x1ab,
	0x191,
	0x134,
	0x115,
	0x151,
	0x161,
	0x196,
	0x15d,
	0x195,
	0x191,
	0x134,
	0x115,
	0x151,
	0x161,
	0x196,
	0x15d,
	0x195,
	0x191,
	0x134,
	0x115,
	0x151,
	0x161,
	0x196,
	0x15d,
	0x195,
	0x191,
	0x134,
	0x115,
	0x151,
	0x161,
	0x196,
	0x15d,
	0x195,
	0x191,
	0x134,
	0x115,
	0x151,
	0x161,
	0x196,
	0x15d,
	0x195,
	0x191,
	0x134,
	0x115,
	0x151,
	0x161,
	0x196,
	0x15d,
	0x195,
	0x191,
	0x134,
	0x115,
	0x151,
	0x161,
	0x196,
	0x15d,
	0x195,
	0x191,
	0x134,
	0x115,
	0x151,
	0x161,
	0x196,
	0x15d,
	0x195,
	0x191,
	0x134,
	0x115,
	0x151,
	0x161,
	0x196,
	0x15d,
	0x195,
	0x191,
	0x134,
	0x115,
	0x151,
	0x161,
	0x196,
	0x15d,
	0x195,
	0x191,
	0x134,
	0x115,
	0x151,
	0x161,
	0x196,
	0x15d,
	0x195
};


/************************
 MCLK=24Mhz;         
 PCLK= 42  Mhz      
 Frame width=   
 Frame Height=   
*************************/

//720P Parallel RAW 42Mhz 28fps
static INT8U GC1014_Para_720P_42m_28[][2] = 
{
	// SYS
	{0xFE, 0x80},
	{0xFE, 0x80},
	{0xFE, 0x80},
	{0xF2, 0x00},		// sync_pad_io_ebi
	{0xF6, 0x00},		// up down
	{0xFC, 0xC6},
	{0xF7, 0xBB},		// pll enable
	{0xF8, 0x06},		// Pll mode 2
	{0xF9, 0x0E},		// [3]isp all clock enable [0] pll enable
	{0xFA, 0x00},		// div
	{0xFE, 0x00},             
	// ANALOG & CISCTL
	{0x03, 0x02},		//ExposureTime[15:08]
	{0x04, 0xD0},		//ExposureTime[07:00]
         
	{0x05 ,0x01},       //HB
	{0x06 ,0x76},
	{0x07 ,0x00},       // VB
	{0x08 ,0x28},	
	{0x0C ,0x00},
	{0x0D ,0x02},      //height  752
	{0x0E ,0xf0},	
	{0x0F ,0x05},      //width   1298
	{0x10 ,0x12},
	{0x11 ,0x00},
	{0x12 ,0x18},       // Sh-delay
#if SENSOR_FLIP
	{0x17, 0x17},		// [0]mirror [1]flip
#else
	{0x17, 0x14},		// [0]mirror [1]flip
#endif	
	
	{0x19,0x06},
	{0x1b,0x4f},
	{0x1c,0x41},
	{0x1d,0xe0},
	{0x1e,0xfc},
	{0x1f,0x38},
	{0x20,0x81},
  {0x21,0x2f},//6f//2f
	{0x22,0xc0},
	{0x23,0xf2},
	{0x24,0x2f},
	{0x25,0xd4},
	{0x26,0xa8},
	{0x29,0x3f},//54//3f
	{0x2a,0x00},
  {0x2c,0xd0},//do//DC--30fps,0x0xd0---50fps
	{0x2d,0x0f},
	{0x2e,0x00},
	{0x2f,0x1f},
	{0xcc,0x25},
	{0xce,0xf3},
	{0x3f,0x08},
	{0x30,0x00},
	{0x31,0x01},
	{0x32,0x02},
	{0x33,0x03},
	{0x34,0x04},
	{0x35,0x05},
	{0x36,0x06},
	{0x37,0x07},
	{0x38,0x0f},
	{0x39,0x17},
	{0x3a,0x1f},
	/////////////////////////////////////////////////////
	//////////////////////ISP//////////////////////
	/////////////////////////////////////////////////////
	{0xfe,0x00},
	{0x8a,0x00},
	{0x8c,0x00}, //02
	{0x8e,0x02},
	{0x8f,0x15},
	{0x90,0x01},
	{0x92,0x10},		//crop Y offset
	{0x94,0x02},
	{0x95,0x02},
	{0x96,0xD8},//0xD0, by gc @0820
	{0x97,0x05},
	{0x98,0x08},
	/////////////////////////////////////////////////////
	//////////////////////	MIPI	/////////////////////
	/////////////////////////////////////////////////////
	{0xfe,0x03},
	{0x01,0x00},
	{0x02,0x00},
	{0x03,0x00},
	{0x06,0x00},
	{0x10,0x00},
	{0x15,0x00},
	/////////////////////////////////////////////////////
	//////////////////////	BLK	/////////////////////
	/////////////////////////////////////////////////////
	{0xfe,0x00},
  {0x18,0x0a},
	{0x1a,0x11},
  {0x40,0x2b},//2b
	{0x5e,0x00},
	{0x66,0x80},
	/////////////////////////////////////////////////////
	//////////////////////Dark SUN/////////////////////
	/////////////////////////////////////////////////////
	{0xfe,0x00},
	{0xcc,0x25},
  {0xce,0xf3},
	{0x3f,0x08},	
	/////////////////////////////////////////////////////
	//////////////////////	Gain	/////////////////////
	/////////////////////////////////////////////////////
	{0xfe,0x00},
	{0xb0,0x50},
	{0xb3,0x40},
	{0xb4,0x40},
	{0xb5,0x40},
	{0xb6,0x00},
	/////////////////////////////////////////////////////
	//////////////////////,pad enable///////////////
	/////////////////////////////////////////////////////
	{0xf2,0x0f},
	{0xfe,0x00},
};

/************************
 MCLK=24Mhz;         
 PCLK= 48  Mhz      
 Frame width=   
 Frame Height=   
*************************/
//720P Parallel RAW 30fps
static INT8U GC1014_Para_720P_30[][2] = 
{
	/////////////////////////////////////////////////////
	////////////////SYS/////////////////////////////////
	/////////////////////////////////////////////////////	
	{0xfe,0x80},
	{0xfe,0x80},
	{0xfe,0x80},
	{0xf2,0x02},
	{0xf6,0x00},
	{0xfc,0xc6},
	{0xf7,0xb9},
	{0xf8,0x03},
	{0xf9,0x0e},
	{0xfa,0x00},
	{0xfe,0x00},
	/////////////////////////////////////////////////////
	////////////////ANALOG CISCTL////////////////
	/////////////////////////////////////////////////////
	{0x03,0x02},
	{0x04,0xb5},
	{0x05,0x01},
	{0x06,0x80}, //HB
	{0x07,0x00},
	{0x08,0x08}, //VB
	{0x0d,0x02},
	{0x0e,0xf0},//d8
	{0x0f,0x05},
	{0x10,0x10},//08

	{0x11,0x00},
	{0x12,0x18},
	
#if SENSOR_FLIP
	{0x17, 0x17},		// [0]mirror [1]flip
#else
	{0x17, 0x14},		// [0]mirror [1]flip
#endif	

	{0x19,0x06},
	{0x1b,0x4f},
	{0x1c,0x41},
	{0x1d,0xe0},
	{0x1e,0xfc},
	{0x1f,0x38},
	{0x20,0x81},
  {0x21,0x2f},
	{0x22,0xc0},
	{0x23,0xf2},
	{0x24,0x2f},
	{0x25,0xd4},
	{0x26,0xa8},
	{0x29,0x3f},
	{0x2a,0x00},
  {0x2c,0xd0},
	{0x2d,0x0f},
	{0x2e,0x00},
	{0x2f,0x1f},
	{0xcc,0x25},
	{0xce,0xf3},
	{0x3f,0x08},
	{0x30,0x00},
	{0x31,0x01},
	{0x32,0x02},
	{0x33,0x03},
	{0x34,0x04},
	{0x35,0x05},
	{0x36,0x06},
	{0x37,0x07},
	{0x38,0x0f},
	{0x39,0x17},
	{0x3a,0x1f},
	/////////////////////////////////////////////////////
	//////////////////////ISP///////////////////////////
	/////////////////////////////////////////////////////
	{0xfe,0x00},
	{0x8a,0x00},
	{0x8c,0x00}, 
	{0x8e,0x02},
	{0x8f,0x15},
	{0x90,0x01},
	{0x92,0x10},		//crop Y offset
	{0x94,0x02},
	{0x95,0x02},
	{0x96,0xD8},//0xD0, by gc @0820
	{0x97,0x05},
	{0x98,0x08},
	/////////////////////////////////////////////////////
	//////////////////////	MIPI	/////////////////////
	/////////////////////////////////////////////////////
	{0xfe,0x03},
	{0x01,0x00},
	{0x02,0x00},
	{0x03,0x00},
	{0x06,0x00},
	{0x10,0x00},
	{0x15,0x00},
	/////////////////////////////////////////////////////
	//////////////////////	BLK	/////////////////////
	/////////////////////////////////////////////////////
	{0xfe,0x00},
  {0x18,0x0a},
	{0x1a,0x11},
  {0x40,0x2b},
	{0x5e,0x00},
	{0x66,0x80},
	/////////////////////////////////////////////////////
	//////////////////////Dark SUN/////////////////////
	/////////////////////////////////////////////////////
	{0xfe,0x00},
	{0xcc,0x25},
  {0xce,0xf3},
	{0x3f,0x08},	
	
	/////////////////////////////////////////////////////
	//////////////////////	Gain	/////////////////////
	/////////////////////////////////////////////////////
	{0xfe,0x00},
	{0xb0,0x50},
	{0xb3,0x40},
	{0xb4,0x40},
	{0xb5,0x40},
	{0xb6,0x00},
	/////////////////////////////////////////////////////
	//////////////////////,pad enable///////////////
	/////////////////////////////////////////////////////
	{0xf2,0x0f},
	{0xfe,0x00},
};


//1280x800x30_Mipi10
static INT8U GC1014_MIPI_1280_800_30[][2] =
{
	{0xFE, 0x80}
};

//GC1014_mipi_1lane_raw10 -30fps_ 27M
static INT8U GC1014_MIPI_720P[][2] =	
{
	/////////////////////////////////////////////////////
	////////////////SYS/////////////////////////////////
	/////////////////////////////////////////////////////
	{0xFE, 0x80}, 
	{0xFE, 0x80}, 
	{0xFE, 0x80}, 
	{0xF2, 0x00}, // sync_pad_io_ebi 
	{0xF6, 0x00}, // up down 
	{0xFC, 0xC6}, 
	{0xF7, 0x19}, // pll enable 
	{0xF8, 0x03}, // 0x03,Pll mode 2 
	{0xF9, 0x0E}, // [3]isp all clock enable [0] pll enable 
	{0xFA, 0x00}, // div 
	{0xFE, 0x00}, 
	/////////////////////////////////////////////////////
	////////////////// ANALOG & CISCTL ///////////////////
	/////////////////////////////////////////////////////
	{0x03, 0x02}, //ExposureTime[15:08] 
	{0x04, 0xfa}, //ExposureTime[07:00] 
	{0x05 ,0x01}, 
	{0x06 ,0x70},  //HB
	{0x07 ,0x00}, 
	{0x08 ,0x08},  //VB

	{0x0C ,0x00},
	{0x0D ,0x02}, //height 
	{0x0E ,0xf0}, 
	{0x0F ,0x05}, //width 
	{0x10 ,0x18}, 
	{0x11 ,0x00}, 
	{0x12 ,0x18}, //sh_delay
#if SENSOR_FLIP 
	{0x17, 0x17}, // [0]mirror [1]flip 
#else 
	{0x17, 0x14}, // [0]mirror [1]flip 
#endif 
	{0x19,0x06},
	{0x1b,0x4f},
	{0x1c,0x41},
	{0x1d,0xe0},
	{0x1e,0xfc},
	{0x1f,0x38},
	{0x20,0x81},
 {0x21,0x2f},
	{0x22,0xc0},
	{0x23,0xf2},
	{0x24,0x2f},
	{0x25,0xd4},
	{0x26,0xa8},
	{0x29,0x3f},
	{0x2a,0x00},
  {0x2c,0xd0},
	{0x2d,0x0f},
	{0x2e,0x00},
	{0x2f,0x1f},
	{0xcc,0x25},
	{0xce,0xf3},
	{0x3f,0x08},
	{0x30,0x00},
	{0x31,0x01},
	{0x32,0x02},
	{0x33,0x03},
	{0x34,0x04},
	{0x35,0x05},
	{0x36,0x06},
	{0x37,0x07},
	{0x38,0x0f},
	{0x39,0x17},
	{0x3a,0x1f},
	/////////////////////////////////////////////
	////////////////// // ISP  ///////////////////
	////////////////////////////////////////////
	{0xFE, 0x00}, //Page select:0
	{0x8A, 0x00}, 
	{0x8C, 0x07},
	{0x8E, 0x02}, 
	{0x8f, 0x15},
	{0x90, 0x01}, 
#if SENSOR_FLIP 
	{0x92, 0x10}, //crop y offset
#else
	{0x92, 0x01}, //crop y offset
#endif
	{0x94, 0x03},
	{0x95, 0x02}, 
	{0x96, 0xD8},
	{0x97, 0x05}, 
	{0x98, 0x10}, 
	/////////////////////////////////////////////
	////////////////// // Dark Sun  ///////////////////
	////////////////////////////////////////////
	{0xfe, 0x00},
	{0xcc, 0x25},
	{0xce, 0xf3},
	{0x3f, 0x08},
	/////////////////////////////////////////////////////
	//////////////////////	 BLK	/////////////////////
	/////////////////////////////////////////////////////
	{0xfe,0x00},
	{0x18,0x0a},
	{0x1a,0x11},
	{0x40,0x2b},
	{0x5e,0x00},
	{0x66,0x80},
	/////////////////////////////////////////////////////
	//////////////////////	Gain	/////////////////////
	/////////////////////////////////////////////////////
	{0xfe,0x00},
	{0xb0,0x50},
	{0xb3,0x40},
	{0xb4,0x40},
	{0xb5,0x40},
	{0xb6,0x00},
	/////////////////////////////////////////////////////
	//////////////////////	MIPI	/////////////////////
	/////////////////////////////////////////////////////
	{0xFE, 0x03}, //Page select:3
	{0x01, 0x83}, 
	{0x02, 0x11}, //0x17;//0x77
	{0x03, 0x13},//{0x03, 0x30}, 
	{0x04, 0x01}, 
	{0x05, 0x00}, 
	{0x06, 0xa4},
	{0x20, 0x80}, //T_init_set
	{0x21, 0x10}, // T_LPX
	{0x22, 0x05}, // T clk HS prepare
	{0x23, 0x30}, // T clk zero
	{0x24, 0x02}, // T clk hs pre of data
	{0x25, 0x10}, // T clk hs post of data
	{0x26, 0x08}, // T clk trail	
	{0x27, 0x10}, // T hs exit
	{0x28, 0xa0}, // T wakeup
	{0x29, 0x03}, // T d hs prepare
	{0x2a, 0x0a}, // T d hs zero
	{0x2b, 0x04}, // T d hs trail
#if (SENSOR_INTERFACE == MIPI_RAW8)	//RAW8
	{0x10, 0x84}, //0x90
	//need delay 1ms
	{0x10, 0x94}, 
	{0x11, 0x2b}, 
	{0x12, 0x10}, //RAW8 buffer[7:0] 1296*1=1296
	{0x13, 0x05}, //RAW8 buffer[15:8]
#else	//RAW10
	{0x10, 0x80}, //0x90
	//need delay 1ms
	{0x10, 0x90}, 
	{0x11, 0x2b}, 
	{0x12, 0x54}, //RAW10 buffer[7:0] 1288=0x64a
	{0x13, 0x06}, //RAW10 buffer[15:8]
#endif
	{0x15, 0x02}, 
	{0x21, 0x10}, 
	{0x22, 0x03},
	{0x35, 0x0C},
	{0xfe, 0x00}

};

static INT8U GC1014_MIPI_720P_42mhz[][2] =	
{
	/////////////////////////////////////////////////////
	////////////////SYS/////////////////////////////////
	/////////////////////////////////////////////////////
	{0xFE, 0x80}, 
	{0xFE, 0x80}, 
	{0xFE, 0x80}, 
	{0xF2, 0x00}, // sync_pad_io_ebi 
	{0xF6, 0x00}, // up down  
	{0xFC, 0xC6}, 
	{0xF7, 0x1b}, // pll enable 
	{0xF8, 0x06}, //{0xF8, 0x03}, // Pll mode 2 
	{0xF9, 0x0E}, // [3]isp all clock enable [0] pll enable 
	{0xFA, 0x00}, 
    {0xFE, 0x00}, 
	/////////////////////////////////////////////////////
	////////////////// ANALOG & CISCTL ///////////////////
	/////////////////////////////////////////////////////
	{0x03, 0x02}, //ExposureTime[15:08] 
	{0x04, 0xfa}, //ExposureTime[07:00] 
	{0x05 ,0x01}, 
	{0x06 ,0x76},  //HB
	{0x07 ,0x00}, 
	{0x08 ,0x28},  //VB
 
	{0x0C ,0x00}, 
	{0x0D ,0x02}, //height 
	{0x0E ,0xf0},
	{0x0F ,0x05}, //width 
	{0x10 ,0x18},
	{0x11 ,0x00}, 
	{0x12 ,0x18}, //sh_delay
#if SENSOR_FLIP 
	{0x17, 0x17}, // [0]mirror [1]flip 
#else 
	{0x17, 0x14}, // [0]mirror [1]flip 
#endif 
	{0x19,0x06},
	{0x1b,0x4f},
	{0x1c,0x41},
	{0x1d,0xe0},
	{0x1e,0xfc},
	{0x1f,0x38},
	{0x20,0x81},
	{0x21,0x2f},
	{0x22,0xc0},
	{0x23,0xf2},
	{0x24,0x2f},
	{0x25,0xd4},
	{0x26,0xa8},
	{0x29,0x3f},
	{0x2a,0x00},
	{0x2c,0xd0},
	{0x2d,0x0f},
	{0x2e,0x00},
	{0x2f,0x1f},
	{0xcc,0x25},
	{0xce,0xf3},
	{0x3f,0x08},
	{0x30,0x00},
	{0x31,0x01},
	{0x32,0x02},
	{0x33,0x03},
	{0x34,0x04},
	{0x35,0x05},
	{0x36,0x06},
	{0x37,0x07},
	{0x38,0x0f},
	{0x39,0x17},
	{0x3a,0x1f},
	/////////////////////////////////////////////
	////////////////// // ISP  ///////////////////
	////////////////////////////////////////////
	{0xFE, 0x00}, //Page select:0
	{0x8A, 0x00}, 
	{0x8C, 0x07},
	{0x8E, 0x02},
	{0x8f, 0x15}, 
    {0x90, 0x01}, 
#if SENSOR_FLIP 
	{0x92, 0x10}, //crop y offset
#else
	{0x92, 0x01}, //crop y offset
#endif
	{0x94, 0x03},
	{0x95, 0x02}, 
	{0x96, 0xD8},
	{0x97, 0x05}, 
	{0x98, 0x10}, 
	/////////////////////////////////////////////
	////////////////// // Dark Sun	///////////////////
	////////////////////////////////////////////
	{0xfe, 0x00},
	{0xcc, 0x25},
	{0xce, 0xf3},
	{0x3f, 0x08},
	/////////////////////////////////////////////////////
	//////////////////////	 BLK	/////////////////////
	/////////////////////////////////////////////////////
	{0xfe,0x00},
	{0x18,0x0a},
	{0x1a,0x11},
	{0x40,0x2b},
	{0x5e,0x00},
	{0x66,0x80},
	/////////////////////////////////////////////////////
	//////////////////////	Gain	/////////////////////
	/////////////////////////////////////////////////////
	{0xfe,0x00},
	{0xb0,0x50},
	{0xb3,0x40},
	{0xb4,0x40},
	{0xb5,0x40},
	{0xb6,0x00},
	/////////////////////////////////////////////////////
	//////////////////////	MIPI	/////////////////////
	/////////////////////////////////////////////////////
	{0xFE, 0x03}, //Page select:3
	{0x01, 0x83}, 
	{0x02, 0x11}, //0x17;//0x77
	{0x03, 0x13},//{0x03, 0x30}, 
	{0x04, 0x01}, 
	{0x05, 0x00}, 
	{0x06, 0xa4},
	{0x20, 0x80}, //T_init_set
	{0x21, 0x10}, // T_LPX
	{0x22, 0x05}, // T clk HS prepare
	{0x23, 0x30}, // T clk zero
	{0x24, 0x02}, // T clk hs pre of data
	{0x25, 0x10}, // T clk hs post of data
	{0x26, 0x08}, // T clk trail	
	{0x27, 0x10}, // T hs exit
	{0x28, 0xa0}, // T wakeup
	{0x29, 0x03}, // T d hs prepare
	{0x2a, 0x0a}, // T d hs zero
	{0x2b, 0x04}, // T d hs trail
#if (SENSOR_INTERFACE == MIPI_RAW8)	//RAW8
	{0x10, 0x84}, //0x90
	//need delay 1ms
	{0x10, 0x94}, 
	{0x11, 0x2b}, 
	{0x12, 0x10}, //RAW8 buffer[7:0] 1296*1=1296
	{0x13, 0x05}, //RAW8 buffer[15:8]
#else	//RAW10
	{0x10, 0x80}, //0x90
	//need delay 1ms
	{0x10, 0x90}, 
	{0x11, 0x2b}, 
	{0x12, 0x54}, //RAW10 buffer[7:0] 1288=0x64a
	{0x13, 0x06}, //RAW10 buffer[15:8]
#endif
	{0x15, 0x02}, 
	{0x21, 0x10}, 
	{0x22, 0x03},
	{0x35, 0x0C},
	{0xfe, 0x00}

};


static INT8U GC1014_MIPI_VGA_f60[][2] =
{
	{0xFE, 0x80}
};

/**************************************************************************
 *                         G L O B A L    D A T A  For CDSP using                          *
 **************************************************************************/
//#if  GC1014_GC_AE

static const  int g_GC1014_exp_time_gain_50Hz[GC1014_50HZ_EXP_TIME_TOTAL_48MHz][3] =  //203,recount by u2
{
 // {time, analog gain, digital gain}
{5  ,(int)(1.00*100),(int)(1.00*256)}, 
{6  ,(int)(1.00*100),(int)(1.00*256)}, 
{6  ,(int)(1.00*100),(int)(1.00*256)}, 
{7  ,(int)(1.00*100),(int)(1.00*256)}, 
{7  ,(int)(1.00*100),(int)(1.00*256)}, 
{8 ,(int) (1.00*100),(int)(1.00*256)}, 

{8  ,(int)(1.00*100),(int)(1.00*256)}, 
{9  ,(int)(1.00*100),(int)(1.00*256)}, 
{9  ,(int)(1.00*100),(int)(1.00*256)}, 
{9  ,(int)(1.00*100),(int)(1.00*256)}, 
{10 ,(int)(1.00*100),(int)(1.00*256)}, 
{10 ,(int)(1.00*100),(int)(1.00*256)}, 
{10 ,(int)(1.00*100),(int)(1.00*256)}, 
{11 ,(int)(1.00*100),(int)(1.00*256)}, 
{11 ,(int)(1.00*100),(int)(1.00*256)}, 
{11 ,(int)(1.00*100),(int)(1.00*256)},  //10
{12 ,(int)(1.00*100),(int)(1.00*256)}, 
{12 ,(int)(1.00*100),(int)(1.00*256)}, 
{13 ,(int)(1.00*100),(int)(1.00*256)}, 
{13 ,(int)(1.00*100),(int)(1.00*256)}, 
{14 ,(int)(1.00*100),(int)(1.00*256)}, 
{14 ,(int)(1.00*100),(int)(1.00*256)}, 
{15 ,(int)(1.00*100),(int)(1.00*256)}, 
{15 ,(int)(1.00*100),(int)(1.00*256)}, 
{16 ,(int)(1.00*100),(int)(1.00*256)}, 
{16 ,(int)(1.00*100),(int)(1.00*256)},  //20
{17 ,(int)(1.00*100),(int)(1.00*256)}, 
{17 ,(int)(1.00*100),(int)(1.00*256)}, 
{18 ,(int)(1.00*100),(int)(1.00*256)}, 
{19 ,(int)(1.00*100),(int)(1.00*256)}, 
{19 ,(int)(1.00*100),(int)(1.00*256)}, 
{20 ,(int)(1.00*100),(int)(1.00*256)}, 
{21 ,(int)(1.00*100),(int)(1.00*256)}, 
{21 ,(int)(1.00*100),(int)(1.00*256)}, 
{22 ,(int)(1.00*100),(int)(1.00*256)}, 
{23 ,(int)(1.00*100),(int)(1.00*256)},// 30 
{24 ,(int)(1.00*100),(int)(1.00*256)}, 
{25 ,(int)(1.00*100),(int)(1.00*256)}, 
{25 ,(int)(1.00*100),(int)(1.00*256)}, 
{26 ,(int)(1.00*100),(int)(1.00*256)}, 
{27 ,(int)(1.00*100),(int)(1.00*256)}, 
{28 ,(int)(1.00*100),(int)(1.00*256)}, 
{29 ,(int)(1.00*100),(int)(1.00*256)}, 
{30 ,(int)(1.00*100),(int)(1.00*256)}, 
{31 ,(int)(1.00*100),(int)(1.00*256)}, 
{32 ,(int)(1.00*100),(int)(1.00*256)},  //40
{34 ,(int)(1.00*100),(int)(1.00*256)}, 
{35 ,(int)(1.00*100),(int)(1.00*256)}, 
{36 ,(int)(1.00*100),(int)(1.00*256)}, 
{37 ,(int)(1.00*100),(int)(1.00*256)}, 
{39 ,(int)(1.00*100),(int)(1.00*256)}, 
{40 ,(int)(1.00*100),(int)(1.00*256)}, 
{41 ,(int)(1.00*100),(int)(1.00*256)}, 
{43 ,(int)(1.00*100),(int)(1.00*256)}, 
{44 ,(int)(1.00*100),(int)(1.00*256)}, 
{46 ,(int)(1.00*100),(int)(1.00*256)}, 
{48 ,(int)(1.00*100),(int)(1.00*256)}, 
{49 ,(int)(1.00*100),(int)(1.00*256)}, 
{51 ,(int)(1.00*100),(int)(1.00*256)}, 
{53 ,(int)(1.00*100),(int)(1.00*256)}, 
{55 ,(int)(1.00*100),(int)(1.00*256)}, 
{57 ,(int)(1.00*100),(int)(1.00*256)}, 
{58 ,(int)(1.00*100),(int)(1.00*256)}, 
{61 ,(int)(1.00*100),(int)(1.00*256)}, 
{63 ,(int)(1.00*100),(int)(1.00*256)}, 
{65 ,(int)(1.00*100),(int)(1.00*256)},  //60
{67 ,(int)(1.00*100),(int)(1.00*256)}, 
{70 ,(int)(1.00*100),(int)(1.00*256)}, 
{72 ,(int)(1.00*100),(int)(1.00*256)}, 
{75 ,(int)(1.00*100),(int)(1.00*256)}, 
{77 ,(int)(1.00*100),(int)(1.00*256)}, 
{80 ,(int)(1.00*100),(int)(1.00*256)}, 
{83 ,(int)(1.00*100),(int)(1.00*256)}, 
{86 ,(int)(1.00*100),(int)(1.00*256)}, 
{89 ,(int)(1.00*100),(int)(1.00*256)}, 
{92 ,(int)(1.00*100),(int)(1.00*256)}, 
{95 ,(int)(1.00*100),(int)(1.00*256)}, 
{98 ,(int)(1.00*100),(int)(1.00*256)}, 
{102,(int)(1.00*100),(int)(1.00*256)}, 
{105,(int)(1.00*100),(int)(1.00*256)}, 
{109,(int)(1.00*100),(int)(1.00*256)}, 
{113,(int)(1.00*100),(int)(1.00*256)}, 
{117,(int)(1.00*100),(int)(1.00*256)}, 
{121,(int)(1.00*100),(int)(1.00*256)}, 
{125,(int)(1.00*100),(int)(1.00*256)}, 
{130,(int)(1.00*100),(int)(1.00*256)},  //80
{134,(int)(1.00*100),(int)(1.00*256)}, 
{139,(int)(1.00*100),(int)(1.00*256)}, 
{144,(int)(1.00*100),(int)(1.00*256)}, 
{149,(int)(1.00*100),(int)(1.00*256)}, 
{154,(int)(1.00*100),(int)(1.00*256)}, 
{160,(int)(1.00*100),(int)(1.00*256)}, 
{165,(int)(1.00*100),(int)(1.00*256)}, 
{171,(int)(1.00*100),(int)(1.00*256)}, 
{177,(int)(1.00*100),(int)(1.00*256)},  
{184,(int)(1.00*100),(int)(1.00*256)},  //90
{190,(int)(1.00*100),(int)(1.00*256)}, 
{197,(int)(1.00*100),(int)(1.00*256)}, 
{204,(int)(1.00*100),(int)(1.00*256)}, 
{211,(int)(1.00*100),(int)(1.00*256)}, 
{218,(int)(1.00*100),(int)(1.00*256)}, 
// 10ms            
{226,(int)(1.00*100),(int)(1.00*256)},  //96,daylight
{226,(int)(1.04*100),(int)(1.00*256)}, 
{226,(int)(1.06*100),(int)(1.00*256)}, 
{226,(int)(1.11*100),(int)(1.00*256)}, 
{226,(int)(1.15*100),(int)(1.00*256)},  //100
{226,(int)(1.19*100),(int)(1.00*256)}, 
{226,(int)(1.23*100),(int)(1.00*256)}, 
{226,(int)(1.27*100),(int)(1.00*256)}, 
{226,(int)(1.31*100),(int)(1.00*256)}, 
{226,(int)(1.37*100),(int)(1.00*256)}, 
{226,(int)(1.41*100),(int)(1.00*256)}, 
{226,(int)(1.46*100),(int)(1.00*256)}, 
{226,(int)(1.52*100),(int)(1.00*256)}, 
{226,(int)(1.57*100),(int)(1.00*256)}, 
{226,(int)(1.62*100),(int)(1.00*256)},  //110
{226,(int)(1.68*100),(int)(1.00*256)}, 
{226,(int)(1.74*100),(int)(1.00*256)}, 
{226,(int)(1.80*100),(int)(1.00*256)},  // 226=0xe2
//20 ms
{452,(int)(1.00*100),(int)(1.00*256)}, 
{452,(int)(1.04*100),(int)(1.00*256)}, 
{452,(int)(1.06*100),(int)(1.00*256)}, 
{452,(int)(1.11*100),(int)(1.00*256)}, 
{452,(int)(1.15*100),(int)(1.00*256)}, 
{452,(int)(1.19*100),(int)(1.00*256)}, 
{452,(int)(1.23*100),(int)(1.00*256)}, //120
{452,(int)(1.27*100),(int)(1.00*256)}, 
{452,(int)(1.31*100),(int)(1.00*256)}, 
{452,(int)(1.37*100),(int)(1.00*256)}, 
{452,(int)(1.41*100),(int)(1.00*256)}, 
{452,(int)(1.46*100),(int)(1.00*256)}, 
{452,(int)(1.52*100),(int)(1.00*256)}, 
{452,(int)(1.57*100),(int)(1.00*256)}, 
{452,(int)(1.62*100),(int)(1.00*256)}, 
{452,(int)(1.68*100),(int)(1.00*256)},  
{452,(int)(1.74*100),(int)(1.00*256)}, //130
{452,(int)(1.80*100),(int)(1.00*256)}, 
{452,(int)(1.87*100),(int)(1.00*256)}, 
{452,(int)(1.93*100),(int)(1.00*256)},
{452,(int)(2.00*100),(int)(1.00*256)}, 
//30 ms
{678,(int)(1.48*100),(int)(1.00*256)}, 
{678,(int)(1.54*100),(int)(1.00*256)}, 
{678,(int)(1.60*100),(int)(1.00*256)}, 
{678,(int)(1.76*100),(int)(1.00*256)}, 
{678,(int)(1.82*100),(int)(1.00*256)}, 
{678,(int)(1.88*100),(int)(1.00*256)},  //140
{678,(int)(1.94*100),(int)(1.00*256)}, 
{678,(int)(2.00*100),(int)(1.00*256)}, 
{678,(int)(2.06*100),(int)(1.00*256)}, 
{678,(int)(2.12*100),(int)(1.00*256)}, 
{678,(int)(2.18*100),(int)(1.00*256)}, 
{678,(int)(2.24*100),(int)(1.00*256)},  
{678,(int)(2.30*100),(int)(1.00*256)}, 
{678,(int)(2.36*100),(int)(1.00*256)}, 
//40ms
{904,(int)(1.83*100),(int)(1.00*256)}, 
{904,(int)(1.89*100),(int)(1.00*256)},  //150
{904,(int)(1.95*100),(int)(1.00*256)}, 
{904,(int)(2.01*100),(int)(1.00*256)},
{904,(int)(2.07*100),(int)(1.00*256)}, 
{904,(int)(2.14*100),(int)(1.00*256)}, 
{904,(int)(2.22*100),(int)(1.00*256)}, 
{904,(int)(2.30*100),(int)(1.00*256)},

{904,(int)(2.38*100),(int)(1.00*256)}, 
{904,(int)(2.46*100),(int)(1.00*256)}, 
{904,(int)(2.55*100),(int)(1.00*256)}, 
{904,(int)(2.64*100),(int)(1.00*256)}, // 160 
{904,(int)(2.73*100),(int)(1.00*256)}, 
{904,(int)(2.83*100),(int)(1.00*256)}, 
{904,(int)(2.93*100),(int)(1.00*256)}, 
{904,(int)(3.03*100),(int)(1.00*256)}, 
{904,(int)(3.14*100),(int)(1.00*256)}, 
{904,(int)(3.25*100),(int)(1.00*256)}, 
{904,(int)(3.36*100),(int)(1.00*256)}, 
{904,(int)(3.48*100),(int)(1.00*256)}, 
{904,(int)(3.61*100),(int)(1.00*256)}, 
{904,(int)(3.73*100),(int)(1.00*256)}, // 170
{904,(int)(3.86*100),(int)(1.00*256)}, 
{904,(int)(4.00*100),(int)(1.00*256)}, 
{904,(int)(4.14*100),(int)(1.00*256)}, 
{904,(int)(4.29*100),(int)(1.00*256)}, 
{904,(int)(4.44*100),(int)(1.00*256)}, 
{904,(int)(4.59*100),(int)(1.00*256)}, 
{904,(int)(4.76*100),(int)(1.00*256)}, 
{904,(int)(4.92*100),(int)(1.00*256)}, 
{904,(int)(5.10*100),(int)(1.00*256)}, 
{904,(int)(5.28*100),(int)(1.00*256)}, // 180
{904,(int)(5.46*100),(int)(1.00*256)}, 
{904,(int)(5.66*100),(int)(1.00*256)}, 
{904,(int)(5.86*100),(int)(1.00*256)}, 
{904,(int)(6.06*100),(int)(1.00*256)}, 
{904,(int)(6.28*100),(int)(1.00*256)}, 
{904,(int)(6.50*100),(int)(1.00*256)}, 
{904,(int)(6.73*100),(int)(1.00*256)}, 
{904,(int)(6.96*100),(int)(1.00*256)}, 
{904,(int)(7.21*100),(int)(1.00*256)}, 
{904,(int)(7.46*100),(int)(1.00*256)}, // 190 
{904,(int)(7.73*100),(int)(1.00*256)}, 
{904,(int)(8.00*100),(int)(1.00*256)}, 
{904,(int)(8.28*100),(int)(1.00*256)}, 
{904,(int)(8.57*100),(int)(1.00*256)}, 
{904,(int)(8.88*100),(int)(1.00*256)},  
{904,(int)(9.19*100),(int)(1.00*256)}, 
{904,(int)(9.51*100),(int)(1.00*256)}, 
{904,(int)(9.85*100),(int)(1.00*256)},  
{904,(int)(9.91*100),(int)(1.00*256)}, 
{904,(int)(9.97*100),(int)(1.00*256)},  // 200
{904,(int)(10.03*100),(int)(1.00*256)}, 
{904,(int)(10.09*100),(int)(1.00*256)}, 
{904,(int)(10.15*100),(int)(1.00*256)} 
};//50Hz

static const  int g_GC1014_exp_time_gain_60Hz[GC1014_60HZ_EXP_TIME_TOTAL_48MHz][3] = 
{
 // {time, analog gain, digital gain}
{8	,(int)(1.00*100), (int)(1.00*256)},
{9	,(int)(1.00*100), (int)(1.00*256)},
{9	,(int)(1.00*100), (int)(1.00*256)},
{9	,(int)(1.00*100), (int)(1.00*256)},
{10	,(int)(1.00*100), (int)(1.00*256)},
{10	,(int)(1.00*100), (int)(1.00*256)},
{10	,(int)(1.00*100), (int)(1.00*256)},
{11	,(int)(1.00*100), (int)(1.00*256)},
{11	,(int)(1.00*100), (int)(1.00*256)},
{11	,(int)(1.00*100), (int)(1.00*256)},//10
{12	,(int)(1.00*100), (int)(1.00*256)},
{12	,(int)(1.00*100), (int)(1.00*256)},
{13	,(int)(1.00*100), (int)(1.00*256)},
{13	,(int)(1.00*100), (int)(1.00*256)},
{13	,(int)(1.00*100), (int)(1.00*256)},
{14	,(int)(1.00*100), (int)(1.00*256)},
{14	,(int)(1.00*100), (int)(1.00*256)},
{15	,(int)(1.00*100), (int)(1.00*256)},
{16	,(int)(1.00*100), (int)(1.00*256)},
{16	,(int)(1.00*100), (int)(1.00*256)},//20
{17	,(int)(1.00*100), (int)(1.00*256)},
{17	,(int)(1.00*100), (int)(1.00*256)},
{18	,(int)(1.00*100), (int)(1.00*256)},
{18	,(int)(1.00*100), (int)(1.00*256)},
{19	,(int)(1.00*100), (int)(1.00*256)},
{20	,(int)(1.00*100), (int)(1.00*256)},
{20	,(int)(1.00*100), (int)(1.00*256)},
{21	,(int)(1.00*100), (int)(1.00*256)},
{22	,(int)(1.00*100), (int)(1.00*256)},
{23	,(int)(1.00*100), (int)(1.00*256)},//30
{24	,(int)(1.00*100), (int)(1.00*256)},
{24	,(int)(1.00*100), (int)(1.00*256)},
{25	,(int)(1.00*100), (int)(1.00*256)},
{26	,(int)(1.00*100), (int)(1.00*256)},
{27	,(int)(1.00*100), (int)(1.00*256)},
{28	,(int)(1.00*100), (int)(1.00*256)},
{29	,(int)(1.00*100), (int)(1.00*256)},
{30	,(int)(1.00*100), (int)(1.00*256)},
{31	,(int)(1.00*100), (int)(1.00*256)},
{32	,(int)(1.00*100), (int)(1.00*256)},//40
{33	,(int)(1.00*100), (int)(1.00*256)},
{34	,(int)(1.00*100), (int)(1.00*256)},
{36	,(int)(1.00*100), (int)(1.00*256)},
{37	,(int)(1.00*100), (int)(1.00*256)},
{38	,(int)(1.00*100), (int)(1.00*256)},
{40	,(int)(1.00*100), (int)(1.00*256)},
{41	,(int)(1.00*100), (int)(1.00*256)},
{42	,(int)(1.00*100), (int)(1.00*256)},
{44	,(int)(1.00*100), (int)(1.00*256)},
{45	,(int)(1.00*100), (int)(1.00*256)},//50
{47	,(int)(1.00*100), (int)(1.00*256)},
{49	,(int)(1.00*100), (int)(1.00*256)},
{50	,(int)(1.00*100), (int)(1.00*256)},
{52	,(int)(1.00*100), (int)(1.00*256)},
{54	,(int)(1.00*100), (int)(1.00*256)},
{56	,(int)(1.00*100), (int)(1.00*256)},
{58	,(int)(1.00*100), (int)(1.00*256)},
{60	,(int)(1.00*100), (int)(1.00*256)},
{62	,(int)(1.00*100), (int)(1.00*256)},
{64	,(int)(1.00*100), (int)(1.00*256)},//60
{66	,(int)(1.00*100), (int)(1.00*256)},
{69	,(int)(1.00*100), (int)(1.00*256)},
{71	,(int)(1.00*100), (int)(1.00*256)},
{74	,(int)(1.00*100), (int)(1.00*256)},
{76	,(int)(1.00*100), (int)(1.00*256)},
{79	,(int)(1.00*100), (int)(1.00*256)},
{82	,(int)(1.00*100), (int)(1.00*256)},
{85	,(int)(1.00*100), (int)(1.00*256)},
{88	,(int)(1.00*100), (int)(1.00*256)},
{91	,(int)(1.00*100), (int)(1.00*256)},//70
{94	,(int)(1.00*100), (int)(1.00*256)},
{97	,(int)(1.00*100), (int)(1.00*256)},
{101,(int)(1.00*100), (int)(1.00*256)},
{104,(int)(1.00*100), (int)(1.00*256)},
{108,(int)(1.00*100), (int)(1.00*256)},
{112,(int)(1.00*100), (int)(1.00*256)},
{116,(int)(1.00*100), (int)(1.00*256)},
{120,(int)(1.00*100), (int)(1.00*256)},
{124,(int)(1.00*100), (int)(1.00*256)},
{128,(int)(1.00*100), (int)(1.00*256)},//80
{133,(int)(1.00*100), (int)(1.00*256)},
{138,(int)(1.00*100), (int)(1.00*256)},
{142,(int)(1.00*100), (int)(1.00*256)},
{148,(int)(1.00*100), (int)(1.00*256)},
{153,(int)(1.00*100), (int)(1.00*256)},
{158,(int)(1.00*100), (int)(1.00*256)},
{164,(int)(1.00*100), (int)(1.00*256)},
{169,(int)(1.00*100), (int)(1.00*256)},
{175,(int)(1.00*100), (int)(1.00*256)},
{182,(int)(1.00*100), (int)(1.00*256)},//90
{188,(int)(1.00*100), (int)(1.00*256)},
{188,(int)(1.04*100), (int)(1.00*256)},
{188,(int)(1.06*100), (int)(1.00*256)},
{188,(int)(1.11*100), (int)(1.00*256)},
{188,(int)(1.15*100), (int)(1.00*256)},//95,daylight
{188,(int)(1.19*100), (int)(1.00*256)},
{188,(int)(1.23*100), (int)(1.00*256)},
{188,(int)(1.27*100), (int)(1.00*256)},
{188,(int)(1.31*100), (int)(1.00*256)},
{188,(int)(1.37*100), (int)(1.00*256)},//100
{188,(int)(1.41*100), (int)(1.00*256)},
{188,(int)(1.46*100), (int)(1.00*256)},
{188,(int)(1.52*100), (int)(1.00*256)},
{188,(int)(1.57*100), (int)(1.00*256)},
{188,(int)(1.62*100), (int)(1.00*256)},
{188,(int)(1.68*100), (int)(1.00*256)},
{188,(int)(1.74*100), (int)(1.00*256)},
// 16.66 ms
{376,(int)(1.00*100), (int)(1.00*256)},
{376,(int)(1.06*100), (int)(1.00*256)},
{376,(int)(1.12*100), (int)(1.00*256)},//110
{376,(int)(1.18*100), (int)(1.00*256)},
{376,(int)(1.24*100), (int)(1.00*256)},
{376,(int)(1.30*100), (int)(1.00*256)},
{376,(int)(1.36*100), (int)(1.00*256)},
{376,(int)(1.42*100), (int)(1.00*256)},
{376,(int)(1.48*100), (int)(1.00*256)},
{376,(int)(1.54*100), (int)(1.00*256)},
{376,(int)(1.60*100), (int)(1.00*256)},
{376,(int)(1.66*100), (int)(1.00*256)},
{376,(int)(1.72*100), (int)(1.00*256)},//120
{376,(int)(1.80*100), (int)(1.00*256)},
{376,(int)(1.86*100), (int)(1.00*256)},//121,init
{376,(int)(1.92*100), (int)(1.00*256)},
{376,(int)(1.98*100), (int)(1.00*256)},
{376,(int)(2.04*100), (int)(1.00*256)},
{376,(int)(2.10*100), (int)(1.00*256)},
{376,(int)(2.16*100), (int)(1.00*256)},
{376,(int)(2.22*100), (int)(1.00*256)},
// 24.99 ms
{564,(int)(1.62*100), (int)(1.00*256)},
{564,(int)(1.68*100), (int)(1.00*256)},//130
{564,(int)(1.74*100), (int)(1.00*256)},
{564,(int)(1.80*100), (int)(1.00*256)},
{564,(int)(1.86*100), (int)(1.00*256)},
{564,(int)(1.92*100), (int)(1.00*256)},
{564,(int)(1.98*100), (int)(1.00*256)},
{564,(int)(2.04*100), (int)(1.00*256)},
{564,(int)(2.10*100), (int)(1.00*256)},
{564,(int)(2.16*100), (int)(1.00*256)},
{564,(int)(2.22*100), (int)(1.00*256)},
{564,(int)(2.28*100), (int)(1.00*256)},//140
// 33 .32  ms
{752,(int)(1.80*100), (int)(1.00*256)},
{752,(int)(1.86*100), (int)(1.00*256)},
{752,(int)(1.92*100), (int)(1.00*256)},
{752,(int)(1.98*100), (int)(1.00*256)},
{752,(int)(2.04*100), (int)(1.00*256)},
{752,(int)(2.10*100), (int)(1.00*256)},
{752,(int)(2.16*100), (int)(1.00*256)},
{752,(int)(2.22*100), (int)(1.00*256)},
{752,(int)(2.28*100), (int)(1.00*256)},
{752,(int)(2.34*100), (int)(1.00*256)},//150, night
{752,(int)(2.40*100), (int)(1.00*256)},
{752,(int)(2.46*100), (int)(1.00*256)},
{752,(int)(2.52*100), (int)(1.00*256)},
{752,(int)(2.58*100), (int)(1.00*256)},
{752,(int)(2.64*100), (int)(1.00*256)},
{752,(int)(2.70*100), (int)(1.00*256)},
{752,(int)(2.76*100), (int)(1.00*256)},
{752,(int)(2.84*100), (int)(1.00*256)},
{752,(int)(2.90*100), (int)(1.00*256)},
{752,(int)(2.96*100), (int)(1.00*256)},//160
{752,(int)(3.02*100), (int)(1.00*256)},
{752,(int)(3.08*100), (int)(1.00*256)},
{752,(int)(3.14*100), (int)(1.00*256)},
{752,(int)(3.20*100), (int)(1.00*256)},
{752,(int)(3.26*100), (int)(1.00*256)},
{752,(int)(3.32*100), (int)(1.00*256)},
{752,(int)(3.38*100), (int)(1.00*256)},
{752,(int)(3.44*100), (int)(1.00*256)},
{752,(int)(3.50*100), (int)(1.00*256)},
{752,(int)(3.56*100), (int)(1.00*256)},//170

{752,(int)(3.60*100), (int)(1.00*256)},
{752,(int)(3.70*100), (int)(1.00*256)},
{752,(int)(3.80*100), (int)(1.00*256)},
{752,(int)(3.90*100), (int)(1.00*256)},
{752,(int)(4.00*100), (int)(1.00*256)},
{752,(int)(4.10*100), (int)(1.00*256)},
{752,(int)(4.20*100), (int)(1.00*256)},
{752,(int)(4.30*100), (int)(1.00*256)},
{752,(int)(5.40*100), (int)(1.00*256)},
{752,(int)(5.50*100), (int)(1.00*256)},//180
{752,(int)(5.60*100), (int)(1.00*256)},
{752,(int)(5.70*100), (int)(1.00*256)},
{752,(int)(5.80*100), (int)(1.00*256)},
{752,(int)(5.90*100), (int)(1.00*256)},
{752,(int)(6.00*100), (int)(1.00*256)},
{752,(int)(6.10*100), (int)(1.00*256)},
{752,(int)(6.20*100), (int)(1.00*256)},
{752,(int)(6.30*100), (int)(1.00*256)},
{752,(int)(6.40*100), (int)(1.00*256)},
{752,(int)(6.50*100), (int)(1.00*256)},//190
{752,(int)(6.60*100), (int)(1.00*256)},
{752,(int)(6.70*100), (int)(1.00*256)},
{752,(int)(6.80*100), (int)(1.00*256)},
{752,(int)(6.90*100), (int)(1.00*256)},
{752,(int)(7.00*100), (int)(1.00*256)},
{752,(int)(7.10*100), (int)(1.00*256)},
{752,(int)(7.20*100), (int)(1.00*256)} 
};

//#elif (GC_PCLK == GC_48MHZ)	//48Mhz 30fps

static const  int g_GC1014_exp_time_gain_50Hz_48MHz[GC1014_50HZ_EXP_TIME_TOTAL_48MHz][3] =  //203,recount by u2
{
 // {time, analog gain, digital gain}
{8  ,(int)(1.00*100),(int)(1.00*256)}, 
{9  ,(int)(1.00*100),(int)(1.00*256)}, 
{9  ,(int)(1.00*100),(int)(1.00*256)}, 
{9  ,(int)(1.00*100),(int)(1.00*256)}, 
{10 ,(int)(1.00*100),(int)(1.00*256)}, 
{10 ,(int)(1.00*100),(int)(1.00*256)}, 
{10 ,(int)(1.00*100),(int)(1.00*256)}, 
{11 ,(int)(1.00*100),(int)(1.00*256)}, 
{11 ,(int)(1.00*100),(int)(1.00*256)}, 
{11 ,(int)(1.00*100),(int)(1.00*256)},  //10
{12 ,(int)(1.00*100),(int)(1.00*256)}, 
{12 ,(int)(1.00*100),(int)(1.00*256)}, 
{13 ,(int)(1.00*100),(int)(1.00*256)}, 
{13 ,(int)(1.00*100),(int)(1.00*256)}, 
{14 ,(int)(1.00*100),(int)(1.00*256)}, 
{14 ,(int)(1.00*100),(int)(1.00*256)}, 
{15 ,(int)(1.00*100),(int)(1.00*256)}, 
{15 ,(int)(1.00*100),(int)(1.00*256)}, 
{16 ,(int)(1.00*100),(int)(1.00*256)}, 
{16 ,(int)(1.00*100),(int)(1.00*256)},  //20
{17 ,(int)(1.00*100),(int)(1.00*256)}, 
{17 ,(int)(1.00*100),(int)(1.00*256)}, 
{18 ,(int)(1.00*100),(int)(1.00*256)}, 
{19 ,(int)(1.00*100),(int)(1.00*256)}, 
{19 ,(int)(1.00*100),(int)(1.00*256)}, 
{20 ,(int)(1.00*100),(int)(1.00*256)}, 
{21 ,(int)(1.00*100),(int)(1.00*256)}, 
{21 ,(int)(1.00*100),(int)(1.00*256)}, 
{22 ,(int)(1.00*100),(int)(1.00*256)}, 
{23 ,(int)(1.00*100),(int)(1.00*256)},// 30 
{24 ,(int)(1.00*100),(int)(1.00*256)}, 
{25 ,(int)(1.00*100),(int)(1.00*256)}, 
{25 ,(int)(1.00*100),(int)(1.00*256)}, 
{26 ,(int)(1.00*100),(int)(1.00*256)}, 
{27 ,(int)(1.00*100),(int)(1.00*256)}, 
{28 ,(int)(1.00*100),(int)(1.00*256)}, 
{29 ,(int)(1.00*100),(int)(1.00*256)}, 
{30 ,(int)(1.00*100),(int)(1.00*256)}, 
{31 ,(int)(1.00*100),(int)(1.00*256)}, 
{32 ,(int)(1.00*100),(int)(1.00*256)},  //40
{34 ,(int)(1.00*100),(int)(1.00*256)}, 
{35 ,(int)(1.00*100),(int)(1.00*256)}, 
{36 ,(int)(1.00*100),(int)(1.00*256)}, 
{37 ,(int)(1.00*100),(int)(1.00*256)}, 
{39 ,(int)(1.00*100),(int)(1.00*256)}, 
{40 ,(int)(1.00*100),(int)(1.00*256)}, 
{41 ,(int)(1.00*100),(int)(1.00*256)}, 
{43 ,(int)(1.00*100),(int)(1.00*256)}, 
{44 ,(int)(1.00*100),(int)(1.00*256)}, 
{46 ,(int)(1.00*100),(int)(1.00*256)}, 
{48 ,(int)(1.00*100),(int)(1.00*256)}, 
{49 ,(int)(1.00*100),(int)(1.00*256)}, 
{51 ,(int)(1.00*100),(int)(1.00*256)}, 
{53 ,(int)(1.00*100),(int)(1.00*256)}, 
{55 ,(int)(1.00*100),(int)(1.00*256)}, 
{57 ,(int)(1.00*100),(int)(1.00*256)}, 
{58 ,(int)(1.00*100),(int)(1.00*256)}, 
{61 ,(int)(1.00*100),(int)(1.00*256)}, 
{63 ,(int)(1.00*100),(int)(1.00*256)}, 
{65 ,(int)(1.00*100),(int)(1.00*256)},  //60
{67 ,(int)(1.00*100),(int)(1.00*256)}, 
{70 ,(int)(1.00*100),(int)(1.00*256)}, 
{72 ,(int)(1.00*100),(int)(1.00*256)}, 
{75 ,(int)(1.00*100),(int)(1.00*256)}, 
{77 ,(int)(1.00*100),(int)(1.00*256)}, 
{80 ,(int)(1.00*100),(int)(1.00*256)}, 
{83 ,(int)(1.00*100),(int)(1.00*256)}, 
{86 ,(int)(1.00*100),(int)(1.00*256)}, 
{89 ,(int)(1.00*100),(int)(1.00*256)}, 
{92 ,(int)(1.00*100),(int)(1.00*256)}, 
{95 ,(int)(1.00*100),(int)(1.00*256)}, 
{98 ,(int)(1.00*100),(int)(1.00*256)}, 
{102,(int)(1.00*100),(int)(1.00*256)}, 
{105,(int)(1.00*100),(int)(1.00*256)}, 
{109,(int)(1.00*100),(int)(1.00*256)}, 
{113,(int)(1.00*100),(int)(1.00*256)}, 
{117,(int)(1.00*100),(int)(1.00*256)}, 
{121,(int)(1.00*100),(int)(1.00*256)}, 
{125,(int)(1.00*100),(int)(1.00*256)}, 
{130,(int)(1.00*100),(int)(1.00*256)},  //80
{134,(int)(1.00*100),(int)(1.00*256)}, 
{139,(int)(1.00*100),(int)(1.00*256)}, 
{144,(int)(1.00*100),(int)(1.00*256)}, 
{149,(int)(1.00*100),(int)(1.00*256)}, 
{154,(int)(1.00*100),(int)(1.00*256)}, 
{160,(int)(1.00*100),(int)(1.00*256)}, 
{165,(int)(1.00*100),(int)(1.00*256)}, 
{171,(int)(1.00*100),(int)(1.00*256)}, 
{177,(int)(1.00*100),(int)(1.00*256)},  
{184,(int)(1.00*100),(int)(1.00*256)},  //90
{190,(int)(1.00*100),(int)(1.00*256)}, 
{197,(int)(1.00*100),(int)(1.00*256)}, 
{204,(int)(1.00*100),(int)(1.00*256)}, 
{211,(int)(1.00*100),(int)(1.00*256)}, 
{218,(int)(1.00*100),(int)(1.00*256)}, 
// 10ms            
{226,(int)(1.00*100),(int)(1.00*256)},  //96,daylight
{226,(int)(1.04*100),(int)(1.00*256)}, 
{226,(int)(1.06*100),(int)(1.00*256)}, 
{226,(int)(1.11*100),(int)(1.00*256)}, 
{226,(int)(1.15*100),(int)(1.00*256)},  //100
{226,(int)(1.19*100),(int)(1.00*256)}, 
{226,(int)(1.23*100),(int)(1.00*256)}, 
{226,(int)(1.27*100),(int)(1.00*256)}, 
{226,(int)(1.31*100),(int)(1.00*256)}, 
{226,(int)(1.37*100),(int)(1.00*256)}, 
{226,(int)(1.41*100),(int)(1.00*256)}, 
{226,(int)(1.46*100),(int)(1.00*256)}, 
{226,(int)(1.52*100),(int)(1.00*256)}, 
{226,(int)(1.57*100),(int)(1.00*256)}, 
{226,(int)(1.62*100),(int)(1.00*256)},  //110
{226,(int)(1.68*100),(int)(1.00*256)}, 
{226,(int)(1.74*100),(int)(1.00*256)}, 
{226,(int)(1.80*100),(int)(1.00*256)},  // 226=0xe2
//20 ms
{452,(int)(1.00*100),(int)(1.00*256)}, 
{452,(int)(1.04*100),(int)(1.00*256)}, 
{452,(int)(1.06*100),(int)(1.00*256)}, 
{452,(int)(1.11*100),(int)(1.00*256)}, 
{452,(int)(1.15*100),(int)(1.00*256)}, 
{452,(int)(1.19*100),(int)(1.00*256)}, 
{452,(int)(1.23*100),(int)(1.00*256)}, //120
{452,(int)(1.27*100),(int)(1.00*256)}, 
{452,(int)(1.31*100),(int)(1.00*256)}, 
{452,(int)(1.37*100),(int)(1.00*256)}, 
{452,(int)(1.41*100),(int)(1.00*256)}, 
{452,(int)(1.46*100),(int)(1.00*256)}, 
{452,(int)(1.52*100),(int)(1.00*256)}, 
{452,(int)(1.57*100),(int)(1.00*256)}, 
{452,(int)(1.62*100),(int)(1.00*256)}, 
{452,(int)(1.68*100),(int)(1.00*256)},  
{452,(int)(1.74*100),(int)(1.00*256)}, //130
{452,(int)(1.80*100),(int)(1.00*256)}, 
{452,(int)(1.87*100),(int)(1.00*256)}, 
{452,(int)(1.93*100),(int)(1.00*256)},
{452,(int)(2.00*100),(int)(1.00*256)}, 
//30 ms
{678,(int)(1.48*100),(int)(1.00*256)}, 
{678,(int)(1.54*100),(int)(1.00*256)}, 
{678,(int)(1.60*100),(int)(1.00*256)}, 
{678,(int)(1.76*100),(int)(1.00*256)}, 
{678,(int)(1.82*100),(int)(1.00*256)}, 
{678,(int)(1.88*100),(int)(1.00*256)},  //140
{678,(int)(1.94*100),(int)(1.00*256)}, 
{678,(int)(2.00*100),(int)(1.00*256)}, 
{678,(int)(2.06*100),(int)(1.00*256)}, 
{678,(int)(2.12*100),(int)(1.00*256)}, 
{678,(int)(2.18*100),(int)(1.00*256)}, 
{678,(int)(2.24*100),(int)(1.00*256)},  
{678,(int)(2.30*100),(int)(1.00*256)}, 
{678,(int)(2.36*100),(int)(1.00*256)}, 
//40ms
{904,(int)(1.83*100),(int)(1.00*256)}, 
{904,(int)(1.89*100),(int)(1.00*256)},  //150
{904,(int)(1.95*100),(int)(1.00*256)}, 
{904,(int)(2.01*100),(int)(1.00*256)},
{904,(int)(2.07*100),(int)(1.00*256)}, 
{904,(int)(2.14*100),(int)(1.00*256)}, 
{904,(int)(2.22*100),(int)(1.00*256)}, 
{904,(int)(2.30*100),(int)(1.00*256)},

{904,(int)(2.38*100),(int)(1.00*256)}, 
{904,(int)(2.46*100),(int)(1.00*256)}, 
{904,(int)(2.55*100),(int)(1.00*256)}, 
{904,(int)(2.64*100),(int)(1.00*256)}, // 160 
{904,(int)(2.73*100),(int)(1.00*256)}, 
{904,(int)(2.83*100),(int)(1.00*256)}, 
{904,(int)(2.93*100),(int)(1.00*256)}, 
{904,(int)(3.03*100),(int)(1.00*256)}, 
{904,(int)(3.14*100),(int)(1.00*256)}, 
{904,(int)(3.25*100),(int)(1.00*256)}, 
{904,(int)(3.36*100),(int)(1.00*256)}, 
{904,(int)(3.48*100),(int)(1.00*256)}, 
{904,(int)(3.61*100),(int)(1.00*256)}, 
{904,(int)(3.73*100),(int)(1.00*256)}, // 170
{904,(int)(3.86*100),(int)(1.00*256)}, 
{904,(int)(4.00*100),(int)(1.00*256)}, 
{904,(int)(4.14*100),(int)(1.00*256)}, 
{904,(int)(4.29*100),(int)(1.00*256)}, 
{904,(int)(4.44*100),(int)(1.00*256)}, 
{904,(int)(4.59*100),(int)(1.00*256)}, 
{904,(int)(4.76*100),(int)(1.00*256)}, 
{904,(int)(4.92*100),(int)(1.00*256)}, 
{904,(int)(5.10*100),(int)(1.00*256)}, 
{904,(int)(5.28*100),(int)(1.00*256)}, // 180
{904,(int)(5.46*100),(int)(1.00*256)}, 
{904,(int)(5.66*100),(int)(1.00*256)}, 
{904,(int)(5.86*100),(int)(1.00*256)}, 
{904,(int)(6.06*100),(int)(1.00*256)}, 
{904,(int)(6.28*100),(int)(1.00*256)}, 
{904,(int)(6.50*100),(int)(1.00*256)}, 
{904,(int)(6.73*100),(int)(1.00*256)}, 
{904,(int)(6.96*100),(int)(1.00*256)}, 
{904,(int)(7.21*100),(int)(1.00*256)}, 
{904,(int)(7.46*100),(int)(1.00*256)}, // 190 
{904,(int)(7.73*100),(int)(1.00*256)}, 
{904,(int)(8.00*100),(int)(1.00*256)}, 
{904,(int)(8.28*100),(int)(1.00*256)}, 
{904,(int)(8.57*100),(int)(1.00*256)}, 
{904,(int)(8.88*100),(int)(1.00*256)},  
{904,(int)(9.19*100),(int)(1.00*256)}, 
{904,(int)(9.51*100),(int)(1.00*256)}, 
{904,(int)(9.85*100),(int)(1.00*256)},  
{904,(int)(9.91*100),(int)(1.00*256)}, 
{904,(int)(9.97*100),(int)(1.00*256)},  // 200
{904,(int)(10.03*100),(int)(1.00*256)}, 
{904,(int)(10.09*100),(int)(1.00*256)}, 
{904,(int)(10.15*100),(int)(1.00*256)} 
}; 

static const  int g_GC1014_exp_time_gain_60Hz_48MHz[GC1014_60HZ_EXP_TIME_TOTAL_48MHz][3] = 
{
 // {time, analog gain, digital gain}
{8	,(int)(1.00*100), (int)(1.00*256)},
{9	,(int)(1.00*100), (int)(1.00*256)},
{9	,(int)(1.00*100), (int)(1.00*256)},
{9	,(int)(1.00*100), (int)(1.00*256)},
{10	,(int)(1.00*100), (int)(1.00*256)},
{10	,(int)(1.00*100), (int)(1.00*256)},
{10	,(int)(1.00*100), (int)(1.00*256)},
{11	,(int)(1.00*100), (int)(1.00*256)},
{11	,(int)(1.00*100), (int)(1.00*256)},
{11	,(int)(1.00*100), (int)(1.00*256)},//10
{12	,(int)(1.00*100), (int)(1.00*256)},
{12	,(int)(1.00*100), (int)(1.00*256)},
{13	,(int)(1.00*100), (int)(1.00*256)},
{13	,(int)(1.00*100), (int)(1.00*256)},
{13	,(int)(1.00*100), (int)(1.00*256)},
{14	,(int)(1.00*100), (int)(1.00*256)},
{14	,(int)(1.00*100), (int)(1.00*256)},
{15	,(int)(1.00*100), (int)(1.00*256)},
{16	,(int)(1.00*100), (int)(1.00*256)},
{16	,(int)(1.00*100), (int)(1.00*256)},//20
{17	,(int)(1.00*100), (int)(1.00*256)},
{17	,(int)(1.00*100), (int)(1.00*256)},
{18	,(int)(1.00*100), (int)(1.00*256)},
{18	,(int)(1.00*100), (int)(1.00*256)},
{19	,(int)(1.00*100), (int)(1.00*256)},
{20	,(int)(1.00*100), (int)(1.00*256)},
{20	,(int)(1.00*100), (int)(1.00*256)},
{21	,(int)(1.00*100), (int)(1.00*256)},
{22	,(int)(1.00*100), (int)(1.00*256)},
{23	,(int)(1.00*100), (int)(1.00*256)},//30
{24	,(int)(1.00*100), (int)(1.00*256)},
{24	,(int)(1.00*100), (int)(1.00*256)},
{25	,(int)(1.00*100), (int)(1.00*256)},
{26	,(int)(1.00*100), (int)(1.00*256)},
{27	,(int)(1.00*100), (int)(1.00*256)},
{28	,(int)(1.00*100), (int)(1.00*256)},
{29	,(int)(1.00*100), (int)(1.00*256)},
{30	,(int)(1.00*100), (int)(1.00*256)},
{31	,(int)(1.00*100), (int)(1.00*256)},
{32	,(int)(1.00*100), (int)(1.00*256)},//40
{33	,(int)(1.00*100), (int)(1.00*256)},
{34	,(int)(1.00*100), (int)(1.00*256)},
{36	,(int)(1.00*100), (int)(1.00*256)},
{37	,(int)(1.00*100), (int)(1.00*256)},
{38	,(int)(1.00*100), (int)(1.00*256)},
{40	,(int)(1.00*100), (int)(1.00*256)},
{41	,(int)(1.00*100), (int)(1.00*256)},
{42	,(int)(1.00*100), (int)(1.00*256)},
{44	,(int)(1.00*100), (int)(1.00*256)},
{45	,(int)(1.00*100), (int)(1.00*256)},//50
{47	,(int)(1.00*100), (int)(1.00*256)},
{49	,(int)(1.00*100), (int)(1.00*256)},
{50	,(int)(1.00*100), (int)(1.00*256)},
{52	,(int)(1.00*100), (int)(1.00*256)},
{54	,(int)(1.00*100), (int)(1.00*256)},
{56	,(int)(1.00*100), (int)(1.00*256)},
{58	,(int)(1.00*100), (int)(1.00*256)},
{60	,(int)(1.00*100), (int)(1.00*256)},
{62	,(int)(1.00*100), (int)(1.00*256)},
{64	,(int)(1.00*100), (int)(1.00*256)},//60
{66	,(int)(1.00*100), (int)(1.00*256)},
{69	,(int)(1.00*100), (int)(1.00*256)},
{71	,(int)(1.00*100), (int)(1.00*256)},
{74	,(int)(1.00*100), (int)(1.00*256)},
{76	,(int)(1.00*100), (int)(1.00*256)},
{79	,(int)(1.00*100), (int)(1.00*256)},
{82	,(int)(1.00*100), (int)(1.00*256)},
{85	,(int)(1.00*100), (int)(1.00*256)},
{88	,(int)(1.00*100), (int)(1.00*256)},
{91	,(int)(1.00*100), (int)(1.00*256)},//70
{94	,(int)(1.00*100), (int)(1.00*256)},
{97	,(int)(1.00*100), (int)(1.00*256)},
{101,(int)(1.00*100), (int)(1.00*256)},
{104,(int)(1.00*100), (int)(1.00*256)},
{108,(int)(1.00*100), (int)(1.00*256)},
{112,(int)(1.00*100), (int)(1.00*256)},
{116,(int)(1.00*100), (int)(1.00*256)},
{120,(int)(1.00*100), (int)(1.00*256)},
{124,(int)(1.00*100), (int)(1.00*256)},
{128,(int)(1.00*100), (int)(1.00*256)},//80
{133,(int)(1.00*100), (int)(1.00*256)},
{138,(int)(1.00*100), (int)(1.00*256)},
{142,(int)(1.00*100), (int)(1.00*256)},
{148,(int)(1.00*100), (int)(1.00*256)},
{153,(int)(1.00*100), (int)(1.00*256)},
{158,(int)(1.00*100), (int)(1.00*256)},
{164,(int)(1.00*100), (int)(1.00*256)},
{169,(int)(1.00*100), (int)(1.00*256)},
{175,(int)(1.00*100), (int)(1.00*256)},
{182,(int)(1.00*100), (int)(1.00*256)},//90
{188,(int)(1.00*100), (int)(1.00*256)},
{188,(int)(1.04*100), (int)(1.00*256)},
{188,(int)(1.06*100), (int)(1.00*256)},
{188,(int)(1.11*100), (int)(1.00*256)},
{188,(int)(1.15*100), (int)(1.00*256)},//95,daylight
{188,(int)(1.19*100), (int)(1.00*256)},
{188,(int)(1.23*100), (int)(1.00*256)},
{188,(int)(1.27*100), (int)(1.00*256)},
{188,(int)(1.31*100), (int)(1.00*256)},
{188,(int)(1.37*100), (int)(1.00*256)},//100
{188,(int)(1.41*100), (int)(1.00*256)},
{188,(int)(1.46*100), (int)(1.00*256)},
{188,(int)(1.52*100), (int)(1.00*256)},
{188,(int)(1.57*100), (int)(1.00*256)},
{188,(int)(1.62*100), (int)(1.00*256)},
{188,(int)(1.68*100), (int)(1.00*256)},
{188,(int)(1.74*100), (int)(1.00*256)},
// 16.66 ms
{376,(int)(1.00*100), (int)(1.00*256)},
{376,(int)(1.06*100), (int)(1.00*256)},
{376,(int)(1.12*100), (int)(1.00*256)},//110
{376,(int)(1.18*100), (int)(1.00*256)},
{376,(int)(1.24*100), (int)(1.00*256)},
{376,(int)(1.30*100), (int)(1.00*256)},
{376,(int)(1.36*100), (int)(1.00*256)},
{376,(int)(1.42*100), (int)(1.00*256)},
{376,(int)(1.48*100), (int)(1.00*256)},
{376,(int)(1.54*100), (int)(1.00*256)},
{376,(int)(1.60*100), (int)(1.00*256)},
{376,(int)(1.66*100), (int)(1.00*256)},
{376,(int)(1.72*100), (int)(1.00*256)},//120
{376,(int)(1.80*100), (int)(1.00*256)},
{376,(int)(1.86*100), (int)(1.00*256)},//121,init
{376,(int)(1.92*100), (int)(1.00*256)},
{376,(int)(1.98*100), (int)(1.00*256)},
{376,(int)(2.04*100), (int)(1.00*256)},
{376,(int)(2.10*100), (int)(1.00*256)},
{376,(int)(2.16*100), (int)(1.00*256)},
{376,(int)(2.22*100), (int)(1.00*256)},
// 24.99 ms
{564,(int)(1.62*100), (int)(1.00*256)},
{564,(int)(1.68*100), (int)(1.00*256)},//130
{564,(int)(1.74*100), (int)(1.00*256)},
{564,(int)(1.80*100), (int)(1.00*256)},
{564,(int)(1.86*100), (int)(1.00*256)},
{564,(int)(1.92*100), (int)(1.00*256)},
{564,(int)(1.98*100), (int)(1.00*256)},
{564,(int)(2.04*100), (int)(1.00*256)},
{564,(int)(2.10*100), (int)(1.00*256)},
{564,(int)(2.16*100), (int)(1.00*256)},
{564,(int)(2.22*100), (int)(1.00*256)},
{564,(int)(2.28*100), (int)(1.00*256)},//140
// 33 .32  ms
{752,(int)(1.80*100), (int)(1.00*256)},
{752,(int)(1.86*100), (int)(1.00*256)},
{752,(int)(1.92*100), (int)(1.00*256)},
{752,(int)(1.98*100), (int)(1.00*256)},
{752,(int)(2.04*100), (int)(1.00*256)},
{752,(int)(2.10*100), (int)(1.00*256)},
{752,(int)(2.16*100), (int)(1.00*256)},
{752,(int)(2.22*100), (int)(1.00*256)},
{752,(int)(2.28*100), (int)(1.00*256)},
{752,(int)(2.34*100), (int)(1.00*256)},//150, night
{752,(int)(2.40*100), (int)(1.00*256)},
{752,(int)(2.46*100), (int)(1.00*256)},
{752,(int)(2.52*100), (int)(1.00*256)},
{752,(int)(2.58*100), (int)(1.00*256)},
{752,(int)(2.64*100), (int)(1.00*256)},
{752,(int)(2.70*100), (int)(1.00*256)},
{752,(int)(2.76*100), (int)(1.00*256)},
{752,(int)(2.84*100), (int)(1.00*256)},
{752,(int)(2.90*100), (int)(1.00*256)},
{752,(int)(2.96*100), (int)(1.00*256)},//160
{752,(int)(3.02*100), (int)(1.00*256)},
{752,(int)(3.08*100), (int)(1.00*256)},
{752,(int)(3.14*100), (int)(1.00*256)},
{752,(int)(3.20*100), (int)(1.00*256)},
{752,(int)(3.26*100), (int)(1.00*256)},
{752,(int)(3.32*100), (int)(1.00*256)},
{752,(int)(3.38*100), (int)(1.00*256)},
{752,(int)(3.44*100), (int)(1.00*256)},
{752,(int)(3.50*100), (int)(1.00*256)},
{752,(int)(3.56*100), (int)(1.00*256)},//170

{752,(int)(3.60*100), (int)(1.00*256)},
{752,(int)(3.70*100), (int)(1.00*256)},
{752,(int)(3.80*100), (int)(1.00*256)},
{752,(int)(3.90*100), (int)(1.00*256)},
{752,(int)(4.00*100), (int)(1.00*256)},
{752,(int)(4.10*100), (int)(1.00*256)},
{752,(int)(4.20*100), (int)(1.00*256)},
{752,(int)(4.30*100), (int)(1.00*256)},
{752,(int)(5.40*100), (int)(1.00*256)},
{752,(int)(5.50*100), (int)(1.00*256)},//180
{752,(int)(5.60*100), (int)(1.00*256)},
{752,(int)(5.70*100), (int)(1.00*256)},
{752,(int)(5.80*100), (int)(1.00*256)},
{752,(int)(5.90*100), (int)(1.00*256)},
{752,(int)(6.00*100), (int)(1.00*256)},
{752,(int)(6.10*100), (int)(1.00*256)},
{752,(int)(6.20*100), (int)(1.00*256)},
{752,(int)(6.30*100), (int)(1.00*256)},
{752,(int)(6.40*100), (int)(1.00*256)},
{752,(int)(6.50*100), (int)(1.00*256)},//190
{752,(int)(6.60*100), (int)(1.00*256)},
{752,(int)(6.70*100), (int)(1.00*256)},
{752,(int)(6.80*100), (int)(1.00*256)},
{752,(int)(6.90*100), (int)(1.00*256)},
{752,(int)(7.00*100), (int)(1.00*256)},
{752,(int)(7.10*100), (int)(1.00*256)},
{752,(int)(7.20*100), (int)(1.00*256)} 
};

//#else	//42Mhz 25fps

static const  int g_GC1014_exp_time_gain_50Hz_42MHz[GC1014_50HZ_EXP_TIME_TOTAL_42MHz][3] =  //203,recount by u2
{ // {time, analog gain, digital gain}
{8  ,(int)(1.00*100),(int)(1.00*256)}, 
{8  ,(int)(1.00*100),(int)(1.00*256)}, 
{9  ,(int)(1.00*100),(int)(1.00*256)}, 
{9  ,(int)(1.00*100),(int)(1.00*256)}, 
{9  ,(int)(1.00*100),(int)(1.00*256)}, 
{9  ,(int)(1.00*100),(int)(1.00*256)}, 
{10 ,(int)(1.00*100),(int)(1.00*256)}, 
{10 ,(int)(1.00*100),(int)(1.00*256)}, 
{10 ,(int)(1.00*100),(int)(1.00*256)}, 
{11 ,(int)(1.00*100),(int)(1.00*256)},  //10
{11 ,(int)(1.00*100),(int)(1.00*256)}, 
{12 ,(int)(1.00*100),(int)(1.00*256)}, 
{12 ,(int)(1.00*100),(int)(1.00*256)}, 
{12 ,(int)(1.00*100),(int)(1.00*256)}, 
{13 ,(int)(1.00*100),(int)(1.00*256)}, 
{13 ,(int)(1.00*100),(int)(1.00*256)}, 
{14 ,(int)(1.00*100),(int)(1.00*256)}, 
{14 ,(int)(1.00*100),(int)(1.00*256)}, 
{15 ,(int)(1.00*100),(int)(1.00*256)}, 
{15 ,(int)(1.00*100),(int)(1.00*256)},  //20
{16 ,(int)(1.00*100),(int)(1.00*256)}, 
{16 ,(int)(1.00*100),(int)(1.00*256)}, 
{17 ,(int)(1.00*100),(int)(1.00*256)}, 
{18 ,(int)(1.00*100),(int)(1.00*256)}, 
{18 ,(int)(1.00*100),(int)(1.00*256)}, 
{19 ,(int)(1.00*100),(int)(1.00*256)}, 
{20 ,(int)(1.00*100),(int)(1.00*256)}, 
{20 ,(int)(1.00*100),(int)(1.00*256)}, 
{21 ,(int)(1.00*100),(int)(1.00*256)}, 
{22 ,(int)(1.00*100),(int)(1.00*256)}, 
{22 ,(int)(1.00*100),(int)(1.00*256)}, 
{23 ,(int)(1.00*100),(int)(1.00*256)}, 
{24 ,(int)(1.00*100),(int)(1.00*256)}, 
{25 ,(int)(1.00*100),(int)(1.00*256)}, 
{26 ,(int)(1.00*100),(int)(1.00*256)}, 
{27 ,(int)(1.00*100),(int)(1.00*256)}, 
{28 ,(int)(1.00*100),(int)(1.00*256)}, 
{29 ,(int)(1.00*100),(int)(1.00*256)}, 
{30 ,(int)(1.00*100),(int)(1.00*256)}, 
{31 ,(int)(1.00*100),(int)(1.00*256)},  //40
{32 ,(int)(1.00*100),(int)(1.00*256)}, 
{33 ,(int)(1.00*100),(int)(1.00*256)}, 
{34 ,(int)(1.00*100),(int)(1.00*256)}, 
{35 ,(int)(1.00*100),(int)(1.00*256)}, 
{37 ,(int)(1.00*100),(int)(1.00*256)}, 
{38 ,(int)(1.00*100),(int)(1.00*256)}, 
{39 ,(int)(1.00*100),(int)(1.00*256)}, 
{41 ,(int)(1.00*100),(int)(1.00*256)}, 
{42 ,(int)(1.00*100),(int)(1.00*256)}, 
{43 ,(int)(1.00*100),(int)(1.00*256)}, 
{45 ,(int)(1.00*100),(int)(1.00*256)}, 
{47 ,(int)(1.00*100),(int)(1.00*256)}, 
{48 ,(int)(1.00*100),(int)(1.00*256)}, 
{50 ,(int)(1.00*100),(int)(1.00*256)}, 
{52 ,(int)(1.00*100),(int)(1.00*256)}, 
{54 ,(int)(1.00*100),(int)(1.00*256)}, 
{55 ,(int)(1.00*100),(int)(1.00*256)}, 
{57 ,(int)(1.00*100),(int)(1.00*256)}, 
{59 ,(int)(1.00*100),(int)(1.00*256)}, 
{61 ,(int)(1.00*100),(int)(1.00*256)},  //60
{64 ,(int)(1.00*100),(int)(1.00*256)}, 
{66 ,(int)(1.00*100),(int)(1.00*256)}, 
{68 ,(int)(1.00*100),(int)(1.00*256)}, 
{71 ,(int)(1.00*100),(int)(1.00*256)}, 
{73 ,(int)(1.00*100),(int)(1.00*256)}, 
{76 ,(int)(1.00*100),(int)(1.00*256)}, 
{78 ,(int)(1.00*100),(int)(1.00*256)}, 
{81 ,(int)(1.00*100),(int)(1.00*256)}, 
{84 ,(int)(1.00*100),(int)(1.00*256)}, 
{88 ,(int)(1.00*100),(int)(1.00*256)}, 
{92 ,(int)(1.00*100),(int)(1.00*256)}, 
{96 ,(int)(1.00*100),(int)(1.00*256)}, 
{100 ,(int)(1.00*100),(int)(1.00*256)}, 
{104,(int)(1.00*100),(int)(1.00*256)}, 
{108,(int)(1.00*100),(int)(1.00*256)}, 
{112,(int)(1.00*100),(int)(1.00*256)}, 
{116,(int)(1.00*100),(int)(1.00*256)}, 
{120,(int)(1.00*100),(int)(1.00*256)}, 
{124,(int)(1.00*100),(int)(1.00*256)}, 
{128,(int)(1.00*100),(int)(1.00*256)},  //80
{132,(int)(1.00*100),(int)(1.00*256)}, 
{136,(int)(1.00*100),(int)(1.00*256)}, 
{140,(int)(1.00*100),(int)(1.00*256)}, 
{144,(int)(1.00*100),(int)(1.00*256)}, 
{148,(int)(1.00*100),(int)(1.00*256)}, 
{152,(int)(1.00*100),(int)(1.00*256)}, 
{156,(int)(1.00*100),(int)(1.00*256)}, 
{160,(int)(1.00*100),(int)(1.00*256)}, 
{164,(int)(1.00*100),(int)(1.00*256)},  
{168,(int)(1.00*100),(int)(1.00*256)},  //90
{172,(int)(1.00*100),(int)(1.00*256)}, 
{176,(int)(1.00*100),(int)(1.00*256)}, 
{181,(int)(1.00*100),(int)(1.00*256)}, 
{187,(int)(1.00*100),(int)(1.00*256)}, 
{193,(int)(1.00*100),(int)(1.00*256)}, 
// 10ms            
{200,(int)(1.00*100),(int)(1.00*256)},  //96,daylight
{200,(int)(1.04*100),(int)(1.00*256)}, 
{200,(int)(1.06*100),(int)(1.00*256)}, 
{200,(int)(1.11*100),(int)(1.00*256)}, 
{200,(int)(1.15*100),(int)(1.00*256)},  //100
{200,(int)(1.19*100),(int)(1.00*256)}, 
{200,(int)(1.23*100),(int)(1.00*256)}, 
{200,(int)(1.27*100),(int)(1.00*256)}, 
{200,(int)(1.31*100),(int)(1.00*256)}, 
{200,(int)(1.37*100),(int)(1.00*256)}, 
{200,(int)(1.41*100),(int)(1.00*256)}, 
{200,(int)(1.46*100),(int)(1.00*256)}, 
{200,(int)(1.52*100),(int)(1.00*256)}, 
{200,(int)(1.57*100),(int)(1.00*256)}, 
{200,(int)(1.62*100),(int)(1.00*256)},  //110
{200,(int)(1.68*100),(int)(1.00*256)}, 
{200,(int)(1.74*100),(int)(1.00*256)}, 
{200,(int)(1.80*100),(int)(1.00*256)},  
//20 ms
{400,(int)(1.00*100),(int)(1.00*256)}, 
{400,(int)(1.04*100),(int)(1.00*256)}, 
{400,(int)(1.06*100),(int)(1.00*256)}, 
{400,(int)(1.11*100),(int)(1.00*256)}, 
{400,(int)(1.15*100),(int)(1.00*256)}, 
{400,(int)(1.19*100),(int)(1.00*256)}, 
{400,(int)(1.23*100),(int)(1.00*256)}, //120
{400,(int)(1.27*100),(int)(1.00*256)}, 
{400,(int)(1.31*100),(int)(1.00*256)}, 
{400,(int)(1.37*100),(int)(1.00*256)}, 
{400,(int)(1.41*100),(int)(1.00*256)}, 
{400,(int)(1.46*100),(int)(1.00*256)}, 
{400,(int)(1.52*100),(int)(1.00*256)}, 
{400,(int)(1.57*100),(int)(1.00*256)}, 
{400,(int)(1.62*100),(int)(1.00*256)}, 
{400,(int)(1.68*100),(int)(1.00*256)},  
{400,(int)(1.74*100),(int)(1.00*256)}, //130
{400,(int)(1.80*100),(int)(1.00*256)}, 
{400,(int)(1.87*100),(int)(1.00*256)}, 
{400,(int)(1.93*100),(int)(1.00*256)},
{400,(int)(2.00*100),(int)(1.00*256)}, 
//30 ms
{600,(int)(1.48*100),(int)(1.00*256)}, 
{600,(int)(1.54*100),(int)(1.00*256)}, 
{600,(int)(1.60*100),(int)(1.00*256)}, 
{600,(int)(1.76*100),(int)(1.00*256)}, 
{600,(int)(1.82*100),(int)(1.00*256)}, 
{600,(int)(1.88*100),(int)(1.00*256)},  //140
{600,(int)(1.94*100),(int)(1.00*256)}, 
{600,(int)(2.00*100),(int)(1.00*256)}, 
{600,(int)(2.06*100),(int)(1.00*256)}, 
{600,(int)(2.12*100),(int)(1.00*256)}, 
{600,(int)(2.18*100),(int)(1.00*256)}, 
{600,(int)(2.24*100),(int)(1.00*256)},  
{600,(int)(2.30*100),(int)(1.00*256)}, 
{600,(int)(2.36*100),(int)(1.00*256)}, 
//40ms
{800,(int)(1.83*100),(int)(1.00*256)}, 
{800,(int)(1.89*100),(int)(1.00*256)},  //150
{800,(int)(1.95*100),(int)(1.00*256)}, 
{800,(int)(2.01*100),(int)(1.00*256)},
{800,(int)(2.07*100),(int)(1.00*256)}, 
{800,(int)(2.14*100),(int)(1.00*256)}, 
{800,(int)(2.22*100),(int)(1.00*256)}, 
{800,(int)(2.30*100),(int)(1.00*256)}, 
{800,(int)(2.38*100),(int)(1.00*256)}, 
{800,(int)(2.46*100),(int)(1.00*256)}, 
{800,(int)(2.55*100),(int)(1.00*256)}, 
{800,(int)(2.64*100),(int)(1.00*256)},  //160
{800,(int)(2.73*100),(int)(1.00*256)}, 
{800,(int)(2.83*100),(int)(1.00*256)}, 
{800,(int)(2.93*100),(int)(1.00*256)}, 
{800,(int)(3.03*100),(int)(1.00*256)}, 
{800,(int)(3.14*100),(int)(1.00*256)}, 
{800,(int)(3.25*100),(int)(1.00*256)}, 
{800,(int)(3.36*100),(int)(1.00*256)}, 
{800,(int)(3.48*100),(int)(1.00*256)}, 
{800,(int)(3.61*100),(int)(1.00*256)}, 
{800,(int)(3.73*100),(int)(1.00*256)}, //170
{800,(int)(3.86*100),(int)(1.00*256)}, 
{800,(int)(4.00*100),(int)(1.00*256)},   // GC_BLK night
{800,(int)(4.14*100),(int)(1.00*256)}, 
{800,(int)(4.29*100),(int)(1.00*256)}, 
{800,(int)(4.44*100),(int)(1.00*256)}, 
{800,(int)(4.59*100),(int)(1.00*256)}, 
{800,(int)(4.76*100),(int)(1.00*256)}, 
{800,(int)(4.92*100),(int)(1.00*256)}, 
{800,(int)(5.10*100),(int)(1.00*256)}, 
{800,(int)(5.28*100),(int)(1.00*256)}, //180 
{800,(int)(5.46*100),(int)(1.00*256)}, 
{800,(int)(5.66*100),(int)(1.00*256)}, 
{800,(int)(5.86*100),(int)(1.00*256)}, 
{800,(int)(6.06*100),(int)(1.00*256)}, 
{800,(int)(6.28*100),(int)(1.00*256)}, 
{800,(int)(6.50*100),(int)(1.00*256)}, 
{800,(int)(6.73*100),(int)(1.00*256)}, 
{800,(int)(6.96*100),(int)(1.00*256)}, 
{800,(int)(7.21*100),(int)(1.00*256)}, //189
{800,(int)(7.46*100),(int)(1.00*256)}, //190 
{800,(int)(7.73*100),(int)(1.00*256)}, 
{800,(int)(8.00*100),(int)(1.00*256)}, 
{800,(int)(8.28*100),(int)(1.00*256)}, 
{800,(int)(8.57*100),(int)(1.00*256)}, 
{800,(int)(8.88*100),(int)(1.00*256)}, 
{800,(int)(9.19*100),(int)(1.00*256)}, 
{800,(int)(9.51*100),(int)(1.00*256)}, 
{800,(int)(9.85*100),(int)(1.00*256)}, 
{800,(int)(9.91*100),(int)(1.00*256)}, 
{800,(int)(9.97*100),(int)(1.00*256)}, //200
{800,(int)(10.03*100),(int)(1.00*256)}, 
{800,(int)(10.09*100),(int)(1.00*256)},  
{800,(int)(10.15*100),(int)(1.00*256)}
}; 

static const  int g_GC1014_exp_time_gain_60Hz_42MHz[GC1014_60HZ_EXP_TIME_TOTAL_42MHz][3] = 
{ // {time, analog gain, digital gain}
{8  ,(int)(1.00*100),(int)(1.00*256)}, 
{8  ,(int)(1.00*100),(int)(1.00*256)}, 
{9  ,(int)(1.00*100),(int)(1.00*256)}, 
{9  ,(int)(1.00*100),(int)(1.00*256)}, 
{9  ,(int)(1.00*100),(int)(1.00*256)}, 
{9  ,(int)(1.00*100),(int)(1.00*256)}, 
{10 ,(int)(1.00*100),(int)(1.00*256)}, 
{10 ,(int)(1.00*100),(int)(1.00*256)}, 
{10 ,(int)(1.00*100),(int)(1.00*256)}, 
{11 ,(int)(1.00*100),(int)(1.00*256)},  //10
{11 ,(int)(1.00*100),(int)(1.00*256)}, 
{12 ,(int)(1.00*100),(int)(1.00*256)}, 
{12 ,(int)(1.00*100),(int)(1.00*256)}, 
{12 ,(int)(1.00*100),(int)(1.00*256)}, 
{13 ,(int)(1.00*100),(int)(1.00*256)}, 
{13 ,(int)(1.00*100),(int)(1.00*256)}, 
{14 ,(int)(1.00*100),(int)(1.00*256)}, 
{14 ,(int)(1.00*100),(int)(1.00*256)}, 
{15 ,(int)(1.00*100),(int)(1.00*256)}, 
{15 ,(int)(1.00*100),(int)(1.00*256)},  //20
{16 ,(int)(1.00*100),(int)(1.00*256)}, 
{16 ,(int)(1.00*100),(int)(1.00*256)}, 
{17 ,(int)(1.00*100),(int)(1.00*256)}, 
{18 ,(int)(1.00*100),(int)(1.00*256)}, 
{18 ,(int)(1.00*100),(int)(1.00*256)}, 
{19 ,(int)(1.00*100),(int)(1.00*256)}, 
{20 ,(int)(1.00*100),(int)(1.00*256)}, 
{20 ,(int)(1.00*100),(int)(1.00*256)}, 
{21 ,(int)(1.00*100),(int)(1.00*256)}, 
{22 ,(int)(1.00*100),(int)(1.00*256)}, 
{22 ,(int)(1.00*100),(int)(1.00*256)}, 
{23 ,(int)(1.00*100),(int)(1.00*256)}, 
{24 ,(int)(1.00*100),(int)(1.00*256)}, 
{25 ,(int)(1.00*100),(int)(1.00*256)}, 
{26 ,(int)(1.00*100),(int)(1.00*256)}, 
{27 ,(int)(1.00*100),(int)(1.00*256)}, 
{28 ,(int)(1.00*100),(int)(1.00*256)}, 
{29 ,(int)(1.00*100),(int)(1.00*256)}, 
{30 ,(int)(1.00*100),(int)(1.00*256)}, 
{31 ,(int)(1.00*100),(int)(1.00*256)},  //40
{32 ,(int)(1.00*100),(int)(1.00*256)}, 
{33 ,(int)(1.00*100),(int)(1.00*256)}, 
{34 ,(int)(1.00*100),(int)(1.00*256)}, 
{35 ,(int)(1.00*100),(int)(1.00*256)}, 
{37 ,(int)(1.00*100),(int)(1.00*256)}, 
{38 ,(int)(1.00*100),(int)(1.00*256)}, 
{39 ,(int)(1.00*100),(int)(1.00*256)}, 
{41 ,(int)(1.00*100),(int)(1.00*256)}, 
{42 ,(int)(1.00*100),(int)(1.00*256)}, 
{43 ,(int)(1.00*100),(int)(1.00*256)}, 
{45 ,(int)(1.00*100),(int)(1.00*256)}, 
{47 ,(int)(1.00*100),(int)(1.00*256)}, 
{48 ,(int)(1.00*100),(int)(1.00*256)}, 
{50 ,(int)(1.00*100),(int)(1.00*256)}, 
{52 ,(int)(1.00*100),(int)(1.00*256)}, 
{54 ,(int)(1.00*100),(int)(1.00*256)}, 
{55 ,(int)(1.00*100),(int)(1.00*256)}, 
{57 ,(int)(1.00*100),(int)(1.00*256)}, 
{59 ,(int)(1.00*100),(int)(1.00*256)}, 
{61 ,(int)(1.00*100),(int)(1.00*256)},  //60
{64 ,(int)(1.00*100),(int)(1.00*256)}, 
{66 ,(int)(1.00*100),(int)(1.00*256)}, 
{68 ,(int)(1.00*100),(int)(1.00*256)}, 
{71 ,(int)(1.00*100),(int)(1.00*256)}, 
{73 ,(int)(1.00*100),(int)(1.00*256)}, 
{76 ,(int)(1.00*100),(int)(1.00*256)}, 
{78 ,(int)(1.00*100),(int)(1.00*256)}, 
{81 ,(int)(1.00*100),(int)(1.00*256)}, 
{84 ,(int)(1.00*100),(int)(1.00*256)}, 
{87 ,(int)(1.00*100),(int)(1.00*256)}, 
{90 ,(int)(1.00*100),(int)(1.00*256)}, 
{93 ,(int)(1.00*100),(int)(1.00*256)}, 
{96 ,(int)(1.00*100),(int)(1.00*256)}, 
{99,(int)(1.00*100),(int)(1.00*256)}, 
{102,(int)(1.00*100),(int)(1.00*256)}, 
{105,(int)(1.00*100),(int)(1.00*256)}, 
{108,(int)(1.00*100),(int)(1.00*256)}, 
{111,(int)(1.00*100),(int)(1.00*256)}, 
{114,(int)(1.00*100),(int)(1.00*256)}, 
{117,(int)(1.00*100),(int)(1.00*256)},  //80
{120,(int)(1.00*100),(int)(1.00*256)}, 
{124,(int)(1.00*100),(int)(1.00*256)}, 
{128,(int)(1.00*100),(int)(1.00*256)}, 
{132,(int)(1.00*100),(int)(1.00*256)}, 
{136,(int)(1.00*100),(int)(1.00*256)}, 
{140,(int)(1.00*100),(int)(1.00*256)}, 
{144,(int)(1.00*100),(int)(1.00*256)}, 
{149,(int)(1.00*100),(int)(1.00*256)}, 
{154,(int)(1.00*100),(int)(1.00*256)},  
{160,(int)(1.00*100),(int)(1.00*256)},  //90 
// 8.33 ms            
{166,(int)(1.00*100),(int)(1.00*256)},  //91,daylight
{166,(int)(1.04*100),(int)(1.00*256)}, 
{166,(int)(1.06*100),(int)(1.00*256)}, 
{166,(int)(1.11*100),(int)(1.00*256)}, 
{166,(int)(1.15*100),(int)(1.00*256)},  
{166,(int)(1.19*100),(int)(1.00*256)}, 
{166,(int)(1.23*100),(int)(1.00*256)}, 
{166,(int)(1.27*100),(int)(1.00*256)}, 
{166,(int)(1.31*100),(int)(1.00*256)}, 
{166,(int)(1.37*100),(int)(1.00*256)}, //100
{166,(int)(1.41*100),(int)(1.00*256)}, 
{166,(int)(1.46*100),(int)(1.00*256)}, 
{166,(int)(1.52*100),(int)(1.00*256)}, 
{166,(int)(1.57*100),(int)(1.00*256)}, 
{166,(int)(1.62*100),(int)(1.00*256)}, 
{166,(int)(1.68*100),(int)(1.00*256)}, 
{166,(int)(1.74*100),(int)(1.00*256)}, 
{166,(int)(1.80*100),(int)(1.00*256)},  
//8.33*2 ms
{332,(int)(1.00*100),(int)(1.00*256)}, 
{332,(int)(1.04*100),(int)(1.00*256)}, //110
{332,(int)(1.06*100),(int)(1.00*256)}, 
{332,(int)(1.11*100),(int)(1.00*256)}, 
{332,(int)(1.15*100),(int)(1.00*256)}, 
{332,(int)(1.19*100),(int)(1.00*256)}, 
{332,(int)(1.23*100),(int)(1.00*256)}, 
{332,(int)(1.27*100),(int)(1.00*256)}, 
{332,(int)(1.31*100),(int)(1.00*256)}, 
{332,(int)(1.37*100),(int)(1.00*256)}, 
{332,(int)(1.41*100),(int)(1.00*256)}, 
{332,(int)(1.46*100),(int)(1.00*256)}, //120
{332,(int)(1.52*100),(int)(1.00*256)}, 
{332,(int)(1.57*100),(int)(1.00*256)}, 
{332,(int)(1.62*100),(int)(1.00*256)}, 
{332,(int)(1.68*100),(int)(1.00*256)},  
{332,(int)(1.74*100),(int)(1.00*256)}, 
{332,(int)(1.80*100),(int)(1.00*256)}, 
{332,(int)(1.87*100),(int)(1.00*256)}, 
{332,(int)(1.93*100),(int)(1.00*256)},
{332,(int)(2.00*100),(int)(1.00*256)}, 
//8.33*3 ms
{498,(int)(1.48*100),(int)(1.00*256)}, //130
{498,(int)(1.54*100),(int)(1.00*256)}, 
{498,(int)(1.60*100),(int)(1.00*256)}, 
{498,(int)(1.76*100),(int)(1.00*256)}, 
{498,(int)(1.82*100),(int)(1.00*256)}, 
{498,(int)(1.88*100),(int)(1.00*256)}, 
{498,(int)(1.94*100),(int)(1.00*256)}, 
{498,(int)(2.00*100),(int)(1.00*256)}, 
{498,(int)(2.06*100),(int)(1.00*256)}, 
{498,(int)(2.12*100),(int)(1.00*256)}, 
{498,(int)(2.18*100),(int)(1.00*256)}, //140
{498,(int)(2.24*100),(int)(1.00*256)},  
{498,(int)(2.30*100),(int)(1.00*256)}, 
{498,(int)(2.36*100),(int)(1.00*256)}, 
//8.33*4 ms
{664,(int)(1.83*100),(int)(1.00*256)}, 
{664,(int)(1.89*100),(int)(1.00*256)}, 
{664,(int)(1.95*100),(int)(1.00*256)}, 
{664,(int)(2.01*100),(int)(1.00*256)},
{664,(int)(2.07*100),(int)(1.00*256)}, 
{664,(int)(2.14*100),(int)(1.00*256)}, 
{664,(int)(2.22*100),(int)(1.00*256)}, //150
{664,(int)(2.30*100),(int)(1.00*256)}, 
{664,(int)(2.38*100),(int)(1.00*256)}, 
{664,(int)(2.46*100),(int)(1.00*256)}, 
{664,(int)(2.55*100),(int)(1.00*256)}, 
{664,(int)(2.64*100),(int)(1.00*256)}, 
{664,(int)(2.73*100),(int)(1.00*256)}, 
{664,(int)(2.83*100),(int)(1.00*256)}, 
{664,(int)(2.93*100),(int)(1.00*256)}, 
{664,(int)(3.03*100),(int)(1.00*256)}, 
{664,(int)(3.14*100),(int)(1.00*256)}, //160
{664,(int)(3.25*100),(int)(1.00*256)}, 
{664,(int)(3.36*100),(int)(1.00*256)}, 
{664,(int)(3.48*100),(int)(1.00*256)}, 
{664,(int)(3.61*100),(int)(1.00*256)}, 
{664,(int)(3.73*100),(int)(1.00*256)}, 
{664,(int)(3.86*100),(int)(1.00*256)}, 
{664,(int)(4.00*100),(int)(1.00*256)}, 
{664,(int)(4.14*100),(int)(1.00*256)}, 
{664,(int)(4.29*100),(int)(1.00*256)}, 
{664,(int)(4.44*100),(int)(1.00*256)}, //170
{664,(int)(4.59*100),(int)(1.00*256)}, 
{664,(int)(4.76*100),(int)(1.00*256)}, 
{664,(int)(4.92*100),(int)(1.00*256)}, 
{664,(int)(5.10*100),(int)(1.00*256)}, 
{664,(int)(5.28*100),(int)(1.00*256)},  
{664,(int)(5.46*100),(int)(1.00*256)}, 
{664,(int)(5.66*100),(int)(1.00*256)}, 
{664,(int)(5.86*100),(int)(1.00*256)}, 
{664,(int)(6.06*100),(int)(1.00*256)}, 
{664,(int)(6.28*100),(int)(1.00*256)}, //180
{664,(int)(6.50*100),(int)(1.00*256)}, 
{664,(int)(6.73*100),(int)(1.00*256)}, 
{664,(int)(6.96*100),(int)(1.00*256)}, 
{664,(int)(7.21*100),(int)(1.00*256)}, 
{664,(int)(7.46*100),(int)(1.00*256)}, 
{664,(int)(7.73*100),(int)(1.00*256)}, 
{664,(int)(8.00*100),(int)(1.00*256)}, 
{664,(int)(8.28*100),(int)(1.00*256)}, 
{664,(int)(8.57*100),(int)(1.00*256)}, 
{664,(int)(8.88*100),(int)(1.00*256)}, //190
{664,(int)(9.19*100),(int)(1.00*256)}, 
{664,(int)(9.51*100),(int)(1.00*256)}, 
{664,(int)(9.85*100),(int)(1.00*256)}, 
{664,(int)(9.91*100),(int)(1.00*256)}, 
{664,(int)(9.97*100),(int)(1.00*256)}, 
{664,(int)(10.03*100),(int)(1.00*256)}, 
{664,(int)(10.09*100),(int)(1.00*256)},  
{664,(int)(10.15*100),(int)(1.00*256)} //198
};

//#endif	//AE/AG Table END

#endif //(USE_SENSOR_NAME == SENSOR_GC1014)
/****************************************************************************/
#endif	// __DRV_SENSOR_GC1014_H__
/****************************************************************************/
