/*Pseudo Header*/
#define MSG_AUDIO_BASE              0x10000100
#define MSG_IMAGE_TASK_BASE         0x10000200
#define MSG_PPU_BASE             	0x10000300
#define MSG_SYSTEM_BASE             0x10000500
#define MSG_FILESRV_BASE            0x10000600
#define MSG_AUDIO_DAC_BASE          0x10000700
#define MSG_USER_TIMER_BASE			0x10000800
#define MSG_RETURN_STATUS_BASE		0x10000900
#define MSG_JPEG_HANDLE_BASE        0x20000300
#define MSG_ICONSHOW_BASE           0x20000100
#define MSG_AVISHOW_BASE			0x20000400
#define MSG_STARTUP_BASE			0x20000500
#define MSG_AVIENC_BASE				0x20000600

typedef enum
{
	MSG_AVI_TICKER = MSG_AVISHOW_BASE,
	MSG_AVI_AUDIO_END,
	MSG_AVI_MJPEG_END,
	MSG_AVI_DECODE_END,
	MSG_AVI_PARSE_HEADER,
	MSG_AVI_STATUS_CHECK,
	MSG_AVI_PLAY,
	MSG_AVI_STOP,
	MSG_AVI_PAUSE,
	MSG_AVI_RESUME,
	MSG_AVI_ERROR,
	MSG_AVI_PLUGOUT,
	MSG_AVI_DISPLAYSIZE_CHANGE,
	MSG_AVI_MAX,
	MSG_START_AVI_STOP,
	MSG_AVI_VOLUME_DOWN,
	MSG_AVI_VOLUME_UP

}MSG_AVI_ENUM;

typedef enum
{
	MSG_AVI_ENCODE_PACKER_START = MSG_AVIENC_BASE,
	MSG_AVI_ENCODE_PACKER_STOP,
	MSG_AVI_ENCODE_START_AUDIO_RECORD,
	MSG_AVI_ENCODE_STOP_AUDIO_RECORD,
	MSG_AVI_ENCODE_START_VIDEO_ENCODE,
	MSG_AVI_ENCODE_STOP_VIDEO_ENCODE,
	MSG_AVI_ENCODE_START_CSI,
	MSG_AVI_ENCODE_STOP_CSI,	
	MSG_AVI_ENCODE_START_SCALER,
	MSG_AVI_ENCODE_STOP_SCALER,
	MSG_AVI_ENCODE_START,
	MSG_AVI_ENCODE_STOP,
	MSG_AVI_ENCODE_PAUSE,
	MSG_AVI_ENCODE_RESUME,
	MSG_AVI_ENCODE_CAPTURE_PICTURE, 
	MSG_AVI_ENCODE_STORAGE_FULL,
	MSG_AVI_ENCODE_STORAGE_ERR,
	MSG_AVI_ENCODE_EXIT 
}MSG_AVIENC_ENUM;

typedef enum
{
    MSG_AUD_PLAY=MSG_AUDIO_BASE,
    MSG_AUD_PLAY_BY_SPI,
    MSG_AUD_MIDI_PLAY,
    MSG_AUD_PAUSE,
    MSG_AUD_STOP,
    MSG_AUD_RESUME,
    MSG_AUD_AVI_PLAY,
    MSG_AUD_SET_MUTE,
    MSG_AUD_VOLUME_SET,
    MSG_AUD_DECODE_NEXT_FRAME,
    MSG_AUD_SPU_RESTART,
    MSG_AUD_PLAY_RES,
    MSG_AUD_PLAY_SPI_RES,
    MSG_AUD_STOP_RES,
    MSG_AUD_PAUSE_RES,
    MSG_AUD_RESUME_RES,
    MSG_AUD_MUTE_SET_RES,
    MSG_AUD_VOLUME_SET_RES,
    MSG_AUD_BG_PLAY_RES,
    MSG_AUD_BG_PLAY_SPI_RES,
    MSG_AUD_BG_STOP_RES,
    MSG_AUD_BG_PAUSE_RES,
    MSG_AUD_BG_RESUME_RES,
    MSG_AUD_START_SAMPLES_COUNT,
    MSG_AUD_PLAY_TIME_GET_START,
    MSG_AUD_PLAY_TIME_GET_END,
    MSG_AUD_PLAY_TIME_RES,
    MSG_AUD_REVERSE_SET,
    MSG_AUD_PLAY_SPEED_SET,
    MSG_AUD_MAX
} MSG_AUD_ENUM;

typedef enum
{
    MSG_ICON_DECODE=MSG_ICONSHOW_BASE,
    MSG_ICON_DECODE_ERR,
    MSG_ICON_AVI_DECODE,
    MSG_ICON_INSERT,
    MSG_ICON_CFG,
    MSG_ICON_HANDOVER,
    MSG_ICON_FLY_FILL,
    MSG_ICON_REMOVE,
    MSG_ICON_FS_WAIT,
    MSG_ICON_RING_BUF_UPDATE,
    MSG_ICON_RING_BUF_REG_TO_SPRITE_IMG,
    MSG_ICON_SLIDE_WIN_CFG,
    MSG_ICON_RUNTIME_DISPLAY,
    MSG_ICON_ERROR_SHOW,
    MSG_ICON_KEY_SELECT_MOTION,
    MSG_ICON_IMAGE_FS_SCAN,
    MSG_ICON_SW_TIMER_ISR,
    MSG_ICON_COVER_FLOW_STATE,
    MSG_ICON_MAX
} MSG_ICONSHOW_ENUM;

typedef enum
{
    MSG_MJPEG_DECODE_OK=MSG_JPEG_HANDLE_BASE,
    MSG_MJPEG_DECODE_FAIL,
    MSG_MJPEG_DECODE_STATUS,
    MSG_JPEG_DECODE_MAX
} MSG_MJPEG_DECODE_ENUM;

typedef enum
{
	// Request
    MSG_IMAGE_PARSE_HEADER_REQ = MSG_IMAGE_TASK_BASE,
    MSG_IMAGE_DECODE_REQ,
    MSG_IMAGE_DECODE_EXT_REQ,
    MSG_IMAGE_SCALE_REQ,
    MSG_MJPEG_PARSE_HEADER_REQ,
    MSG_MJPEG_DECODE,
    MSG_MJPEG_DECODE_1,
    MSG_IMAGE_STOP_REQ,
    MSG_IMAGE_REQUEST_MAX,
	// Reply
	MSG_IMAGE_PARSE_HEADER_REPLY,
	MSG_IMAGE_DECODE_REPLY,
	MSG_IMAGE_DECODE_EXT_REPLY,
	MSG_IMAGE_SCALE_REPLY,
	MSG_MJPEG_PARSE_HEADER_REPLY,
    MSG_IMAGE_STOP_REPLY,
	MSG_IMAGE_REPLY_MAX
} MSG_IMAGE_TASK_ENUM;

typedef enum
{
    MSG_SYS_AD_KEY=MSG_SYSTEM_BASE,
    MSG_SYS_UART_KEY,
    MSG_SYS_IR_KEY,
    MSG_SYS_ITOUCH_KEY,
    MSG_SYS_KEY_POWER,
    MSG_SYS_LOW_BATTERY,
    MSG_SYS_RTC,
    MSG_SYS_ALARM,
    MSG_SYS_HALT,
    MSG_SYS_CARD_PLUG_CHANGE,
    MSG_SYS_QUERY_CARD_EXIST,
    MSG_SYS_STORAGE_SCAN_START,
    MSG_SYS_STORAGE_SCAN_DONE,
    MSG_SYS_ERROR,
    MSG_SYS_USBD_PLUG_CHANGE,
    MSG_SYS_NAUGHTY_EVENT,
    MSG_SYS_USBD,
    MSG_SYS_USBH,
    MSG_SYS_ADAPTER_PLUG,
    MSG_SYS_BATTERY_CHECK,
    MSG_SYS_MAX
} MSG_SYS_ENUM;


typedef enum
{
    MSG_FILESRV_FS_READ=MSG_FILESRV_BASE,
    MSG_FILESRV_NVRAM_AUDIO_GPRS_READ,
    MSG_FILESRV_NVRAM_AUDIO_APP_READ,
    MSG_FILESRV_NVRAM_AUDIO_APP_PACKED_READ,
    MSG_FILESRV_NVRAM_READ,
    MSG_FILESRV_NVRAM_AUDIO_READ,	// added by Bruce, 2009/02/19
    MSG_FILESRV_SPI_L1_READ,
    MSG_FILESRV_SPI_L3_READ,
    MSG_FILESRV_LDW_AUDIO_APP_READ,
    MSG_FILESRV_FLUSH,
    MSG_FILESRV_FLUSH_DONE,
    MSG_FILESRV_SCAN,
    MSG_FILESRV_SCAN_CONTINUE,
    MSG_FILESRV_MOUNT,
    MSG_FILESRV_SORTING,
    MSG_FILESRV_DEL,     /*RFU*/
    MSG_FILESRV_COPY,    /*RFU*/
    MSG_FILESRV_MOVE,    /*RFU*/
    MSG_FILESRV_RENAME,  /*RFU*/
    MSG_FILESRV_OPEN,    /*RFU*/
    MSG_FILESRV_CLOSE,   /*RFU*/
    MSG_FILESRV_AVIAUDIO_FS_READ,  /*avi use only */
    MSG_FILESRV_AVIVIDEO_FS_READ,  /*avi use only */
    MSG_FILESRV_USER_DEFINE_READ,	// added by Bruce, 2008/10/27
    MSG_FILESRV_MAX   /*RFU*/
} MSG_FILESRV_ENUM;

typedef enum
{
    MSG_AUD_DMA_DBF_START=MSG_AUDIO_DAC_BASE,
    MSG_AUD_DMA_DBF_DONE,
    MSG_AUD_DMA_DBF_RESTART,
    MSG_AUD_DMA_WIDX_CLEAR,
    MSG_AUD_STOP_SMOOTH_START,
    MSG_AUD_RAMP_DOWN_START,
    MSG_AUD_SPU_WIDX_CLEAR,
    MSG_AUD_SPU_WIDX_SET,
    MSG_AUD_SPU_SOFTCH_START,
    MSG_AUD_SPU_LEFT_DONE,
    MSG_AUD_SPU_RIGHT_DONE,
    MSG_AUD_DMA_PAUSE,
    MSG_AUD_LOW_PRIORITY_SET,
    MSG_AUD_DAC_STOP,
    MSG_AUD_DAC_REVRESE,
    MSG_AUD_DAC_REVRESE_CLEAR,
    MSG_AUD_DAC_MAX
} MSG_AUD_DAC_ENUM;

typedef enum
{
    MSG_USER_TIMER0=MSG_USER_TIMER_BASE,
    MSG_USER_TIMER1,
    MSG_USER_TIMER2,
    MSG_USER_TIMER3,
    MSG_USER_TIMER4,
    MSG_USER_TIMER_MAX
} MSG_USER_TIMER_ENUM;

typedef enum
{
	MSG_SLIDE_SHOW_NEXT_TICK = MSG_RETURN_STATUS_BASE,
	MSG_RETURN_STATUS_MAX
} MSG_RETURN_STATUS_ENUM;

//avi encode
typedef enum
{
	MSG_AVI_START_SENSOR = 0x00100000,
	MSG_AVI_STOP_SENSOR = 0x00200000,
	MSG_AVI_START_ENCODE = 0x00300000,
	MSG_AVI_STOP_ENCODE = 0x00400000,
	MSG_AVI_CAPTURE_PICTURE = 0x00500000,
	MSG_AVI_STORAGE_FULL = 0x00600000,
	MSG_AVI_STORAGE_ERR = 0x00700000,
	MSG_AVI_ENCODE_STATE_EXIT = 0x00800000,
	MSG_AVI_START_USB_WEBCAM = 0x00900000,
	MSG_AVI_STOP_USB_WEBCAM = 0x00A00000,
	MSG_AVI_ZOOM_IN = 0x00B00000,
	MSG_AVI_ZOOM_OUT = 0x00C00000,
	MSG_AVI_DISABLE_SENSOR_CLOCK = 0x00D00000,
// Jpeg compress msg
	MSG_JPG_ISR_ENCODE_DONE = 0x00E00000,
	MSG_JPG_ISR_INPUT_EMPTY = 0x00F00000,
	MSG_JPG_ISR_OUTPUT_FULL = 0x01000000,
	MSG_JPG_ISR_INPUT_EMPTY_OUTPUT_FULL = 0x01100000,
	MSG_JPEG_QUEUE_NOTIFY = 0x01200000,
	MSG_JPEG_CAPTURE_FRAME_DONE = 0x01300000,
	MSG_PREVIEW_BUF_TO_DUMMY = 0x01400000,
	MSG_PREVIEW_BUF_TO_DISPLAY = 0x01500000,
// UVC buffer status
	MSG_UVC_BUF_DMA_DOWN = 0x01600000,
	MSG_UVC_BUF_FLUSH = 0x01700000,
// CDSP
	MSG_CDSP_AE_SHUTTER	= 0x01800000,
	AVIPACKER_MSG_VIDEO_WRITE_DONE = 0x01900000,
	MSG_WIFI_CONNECTED = 0x01A00000,
	MSG_WIFI_DISCONNECTED = 0x01B00000,
	MSG_JPG_ISR_OUTPUT_FULL_SW = 0x01C00000
	
}AVI_ENCODE_STATE_ENUM;


//scaler message
typedef enum
{
	MSG_SCALER_TASK_INIT = 0x1000000,
	MSG_SCALER_TASK_PREVIEW_ON = 0x2000000,
	MSG_SCALER_TASK_PREVIEW_OFF = 0x3000000,
	MSG_SCALER_TASK_PREVIEW_LOCK = 0x4000000,
	MSG_SCALER_TASK_PREVIEW_UNLOCK = 0x5000000,
	MSG_SCALER_TASK_STOP = 0x6000000,
	MSG_SCALER_TASK_EXIT = 0x7000000,
//	MSG_SCALER_TASK_ALLOCATE = 0x8000000,
//	MSG_SCALER_TASK_FREE = 0x9000000,
	MSG_SCALER_TASK_PACKER_ALLOCATE = 0xA000000,
	MSG_SCALER_TASK_PACKER_FREE = 0xB000000	
}AVI_ENCODE_SCALER_ENUM;

//video encode message
typedef enum
{
	MSG_VIDEO_ENCODE_TASK_MJPEG_INIT = 0x3000,
	MSG_VIDEO_ENCODE_TASK_MPEG4_INIT,
	MSG_VIDEO_ENCODE_TASK_STOP,
	MSG_VIDEO_ENCODE_TASK_EXIT
}AVI_ENCODE_VIDEO_ENUM;

//video sci fifo message
typedef enum
{
	MSG_VIDEO_ENCODE_FIFO_START    		= 0x00100000,
	MSG_VIDEO_ENCODE_FIFO_CONTINUE 		= 0x00200000,
	MSG_VIDEO_ENCODE_FIFO_END      		= 0x00300000,
	MSG_VIDEO_ENCODE_FIFO_ERR      		= 0x00400000,
	MSG_VIDEO_ENCODE_FIFO_1ST_DATE      = 0x00500000,
	MSG_VIDEO_ENCODE_FIFO_2ND_DATE      = 0x00600000,
	MSG_VIDEO_ENCODE_FIFO_LAST_DATE     = 0x00700000
}AVI_ENCODE_FIFO_ENUM;


typedef enum
{
	AVI_AUDIO_DMA_DONE = 0,//C_DMA_STATUS_DONE
	AVI_AUDIO_RECORD_START = 0x01000000,
	AVI_AUDIO_RECORD_STOP = 0x02000000,
	AVI_AUDIO_RECORD_STOPING = 0x03000000,
	AVI_AUDIO_RECORD_RESTART = 0x04000000,
	AVI_AUDIO_RECORD_EXIT = 0x05000000,
	AVIPACKER_MSG_AUDIO_WRITE_DONE = 0x06000000,
	AVI_GPS_INFO_HANDLE = 0x07000000,
	AVI_G_SENSOR_INFO_HANDLE = 0x08000000
}AVI_ENCODE_AUDIO_ENUM;

typedef enum
{
	//AVI_DEL_FILE = 0x5000
	MSG_STORAGE_SERVICE_DEL = 0x5000,
	MSG_STORAGE_SERVICE_STORAGE_CHECK,
	MSG_STORAGE_SERVICE_FREESIZE_CHECK_SWITCH,
	MSG_STORAGE_SERVICE_FREESIZE_CHECK,
	MSG_STORAGE_SERVICE_FREE_FILESIZE_CHECK,
	MSG_STORAGE_SERVICE_VIDEO_FILE_DEL,
	MSG_STORAGE_SERVICE_AUTO_DEL_LOCK,
	MSG_STORAGE_SERVICE_TIMER_START,
	MSG_STORAGE_SERVICE_TIMER_STOP,
	MSG_STORAGE_SERVICE_USB_IN,
	MSG_STORAGE_SERVICE_AUD_REQ,
	MSG_STORAGE_SERVICE_AUD_REPLY,
	MSG_STORAGE_SERVICE_PIC_REQ,
	MSG_STORAGE_SERVICE_PIC_REQ2,
	MSG_STORAGE_SERVICE_PIC_REPLY,
	MSG_STORAGE_SERVICE_PIC_DONE,
	MSG_STORAGE_SERVICE_VID_REQ,
	MSG_STORAGE_SERVICE_VID_REPLY,
	MSG_STORAGE_SERVICE_VID_CYCLIC_REQ,
	MSG_STORAGE_SERVICE_VID_CYCLIC_REPLY,
	MSG_STORAGE_SERVICE_MOUNT,
	MSG_STORAGE_SERVICE_NO_STORAGE,
	MSG_STORAGE_SERVICE_FORMAT_REQ,
	MSG_STORAGE_SERVICE_FORMAT_REPLY,
	MSG_STORAGE_SERVICE_BROWSE_REQ,		
	MSG_STORAGE_SERVICE_BROWSE_REPLY,
	MSG_STORAGE_SERVICE_THUMBNAIL_REQ,		
	MSG_STORAGE_SERVICE_THUMBNAIL_REPLY,	
	MSG_STORAGE_USBD_EXIT,
	MSG_STORAGE_USBD_PCAM_EXIT,
	MSG_STORAGE_SERVICE_FILE_DEL_ALL,
	MSG_STORAGE_SERVICE_LOCK_ONE,
	MSG_STORAGE_SERVICE_LOCK_ALL,
	MSG_STORAGE_SERVICE_UNLOCK_ONE,
	MSG_STORAGE_SERVICE_UNLOCK_ALL		
}TASK_STORAGE_SERVICE_ENUM;

typedef enum
{
	MSG_PERIPHERAL_TASK_AD_DETECT_CHECK = 0x6000,
	MSG_PERIPHERAL_TASK_KEY_REGISTER,
	MSG_PERIPHERAL_TASK_MOTION_DETECT_START,
	MSG_PERIPHERAL_TASK_MOTION_DETECT_STOP,
	MSG_PERIPHERAL_TASK_MOTION_DETECT_DELAY,	
	MSG_PERIPHERAL_TASK_MOTION_DETECT_JUDGE,
	MSG_PERIPHERAL_TASK_USBD_DETECT_INIT,
	MSG_PERIPHERAL_TASK_LCD_BACKLIGHT_SET,
	MSG_PERIPHERAL_TASK_LED_SET,
	MSG_PERIPHERAL_TASK_LED_FLASH_SET,
	MSG_PERIPHERAL_TASK_LED_BLINK_SET,
	MSG_PERIPHERAL_TASK_TIMER_VOLUME_ICON_SHOW,
	MSG_PERIPHERAL_TASK_G_SENSOR_POWER_ON_START,
	MSG_PERIPHERAL_USBD_EXIT,
	MSG_PERIPHERAL_TASK_SCREEN_SAVER_ENABLE,
	MSG_PERIPHERAL_TASK_NIGHT_MODE_SET,
	MSG_PERIPHERAL_TV_POLLING_START,
	MSG_PERIPHERAL_TV_POLLING_STOP,
	MSG_PERIPHERAL_TASK_TV_DETECT,
	MSG_PERIPHERAL_TASK_READ_GSENSOR,
	MSG_PERIPHERAL_TASK_BATTERY_CHARGE_ICON_BLINK_START,
	MSG_PERIPHERAL_TASK_BATTERY_CHARGE_ICON_BLINK_STOP,
	MSG_PERIPHERAL_TASK_BATTERY_LOW_BLINK_START,
	MSG_PERIPHERAL_TASK_BATTERY_LOW_BLINK_STOP,
	MSG_PERIPHERAL_TASK_DISPLAY_PLEASE_INSERT_SDC,
	MSG_PERIPHERAL_TASK_ISP_ISO_SET,
	MSG_LDWS_DO
}TASK_PERIPHERAL_ENUM;

typedef enum
{
	MSG_APQ_MODE = 0x7000,
	MSG_APQ_FUNCTION_KEY_ACTIVE,
	MSG_APQ_NEXT_KEY_ACTIVE,
	MSG_APQ_PREV_KEY_ACTIVE,
	MSG_APQ_PARK_MODE_SET,
	MSG_APQ_POWER_KEY_ACTIVE,
	MSG_APQ_SOS_KEY_ACTIVE,
	MSG_APQ_MENU_KEY_ACTIVE,
	MSG_APQ_WIFI_MENU_EXIT,
	MSG_APQ_VOLUME_SHOW_END,
	MSG_APQ_VDO_REC_STOP,
	MSG_APQ_VDO_REC_RESTART,
	MSG_APQ_RECORD_SWITCH_FILE,
	MSG_APQ_AVI_PACKER_ERROR,
	MSG_APQ_CYCLIC_VIDEO_RECORD,
	MSG_APQ_SELECT_FILE_DEL_REPLY,
	MSG_APQ_MOTION_DETECT_ACTIVE,
	MSG_APQ_MOTION_DETECT_TICK,
	MSG_APQ_MOTION_DETECT_TICK_END,
	MSG_APQ_MOTION_DETECT_ENTRY_CHECK,
	MSG_APQ_MOTION_DETECT_START,
	MSG_APQ_MOTION_DETECT_ICON_UPDATE,
	MSG_APQ_CONNECT_TO_PC,
	MSG_APQ_DISCONNECT_TO_PC,
	MSG_APQ_BATTERY_LVL_SHOW,
	MSG_APQ_LOW_BATTERY_HANDLE,
	MSG_APQ_KEY_IDLE,
	MSG_APQ_NIGHT_MODE_KEY,
	MSG_APQ_AUDIO_ENCODE_ERR,
	MSG_APQ_MJPEG_DECODE_PAUSE,
	MSG_APQ_MJPEG_DECODE_END,
	MSG_APQ_SCROLL_BAR_END,
	MSG_APQ_PREVIEW_EFFECT_END,
	MSG_APQ_INIT_THUMBNAIL,
	MSG_APQ_UPDATE_MP3_TOTAL_INDEX,
	//MSG_APQ_SENSOR_CLOCK_DISABLED,
	MSG_APQ_KEY_WAKE_UP,
	MSG_APQ_FREE_FILESIZE_CHECK_REPLY,
	MSG_APQ_STORAGE_SCAN_DONE,
	MSG_APQ_FREE_PACKER_MEM_DONE,
	MSG_APQ_USER_CONFIG_STORE,
	MSG_APQ_BATTERY_CHARGED_SHOW,
	MSG_APQ_BATTERY_CHARGED_CLEAR,
	MSG_APQ_AUDIO_EFFECT_CAMERA,
	MSG_APQ_AUDIO_EFFECT_MODE,
	MSG_APQ_AUDIO_EFFECT_OK,
	MSG_APQ_AUDIO_EFFECT_MENU,
	MSG_APQ_AUDIO_EFFECT_UP,
	MSG_APQ_AUDIO_EFFECT_DOWN,
	MSG_APQ_DISPLAY_DRAW_TIMER,
	MSG_APQ_FILE_DEL_ALL_REPLY,
	MSG_APQ_FILE_LOCK_ONE_REPLY,
	MSG_APQ_FILE_LOCK_ALL_REPLY,
	MSG_APQ_FILE_UNLOCK_ONE_REPLY,
	MSG_APQ_FILE_UNLOCK_ALL_REPLY,
	MSG_APQ_POWER_ON_AUTO_RECORD,
	MSG_APQ_FILE_LOCK_DURING_RECORDING,
	MSG_APQ_CAPTURE_KEY_ACTIVE,
	MSG_APQ_VIDEO_RECORD_ACTIVE,
	MSG_APQ_MD_ACTIVE,
	MSG_APQ_CAPTURE_CONTINUOUS_SHOOTING,
	MSG_APQ_BATTERY_LOW_SHOW,
	MSG_APQ_CAPTURE_PREVIEW_ON,
	MSG_APQ_FORWARD_FAST_PLAY,
	MSG_APQ_BACKWORD_FAST_PLAY,
	MSG_APQ_HDMI_PLUG_IN,
	MSG_APQ_HDMI_PLUG_OUT,
	MSG_APQ_TV_PLUG_IN,
	MSG_APQ_TV_PLUG_OUT,
	MSG_APQ_SYS_RESET,
	MSG_APQ_WIFI_DISCONNECT,
	MSG_APQ_WIFI_SWITCH,
	MSG_APQ_GET_JPEG_ON_RECORDING,
	EVENT_APQ_ERR_MSG
}TASK_STATE_HANDLING_APQ_ENUM;

typedef enum
{
	MSG_USBD_PLUG_IN = 0x8000,
	MSG_USBD_INITIAL,
	MSG_USBD_PLUG_OUT,
	MSG_USBCAM_PLUG_IN,
	MSG_USBCAM_INITIAL,
	MSG_USBCAM_PLUG_OUT,
	MSG_CHARGE_PLUG_OUT,
	MSG_USBD_SWITCH	
}TASK_USB_ENUM;

typedef enum
{
	MSG_DISPLAY_TASK_JPEG_DRAW				= 0x01000000,
	MSG_DISPLAY_TASK_MJPEG_DRAW				= 0x02000000,
	MSG_DISPLAY_TASK_SETTING_DRAW			= 0x03000000,
	MSG_DISPLAY_TASK_WAV_TIME_DRAW			= 0x04000000,
	MSG_DISPLAY_TASK_USB_CONNECT_DRAW		= 0x05000000,

	MSG_DISPLAY_TASK_HDMI_WAV_TIME_DRAW		= 0x09000000,
	MSG_DISPLAY_TASK_HDMI_JPEG_DRAW			= 0x0A000000,
	MSG_DISPLAY_TASK_HDMI_MJPEG_DRAW		= 0x0B000000,

	MSG_DISPLAY_TASK_EFFECT_INIT			= 0x10000000,
	MSG_DISPLAY_TASK_TV_INIT				= 0x11000000,
	MSG_DISPLAY_TASK_TV_UNINIT				= 0x12000000,
	MSG_DISPLAY_TASK_HDMI_INIT				= 0x13000000,
	MSG_DISPLAY_TASK_HDMI_UNINIT			= 0x14000000,

	MSG_DISPLAY_TASK_ICON_SHOW				= 0x30000000,
	MSG_DISPLAY_TASK_ICON_CLEAR				= 0x31000000,
	MSG_DISPLAY_TASK_ICON_MOVE				= 0x32000000,
	MSG_DISPLAY_TASK_MD_ICON_SHOW           = 0x33000000,
	MSG_DISPLAY_TASK_PIC_EFFECT				= 0x40000000,
	MSG_DISPLAY_TASK_PIC_PREVIEW_EFFECT		= 0x41000000,
	MSG_DISPLAY_TASK_PIC_EFFECT_END			= 0x42000000,
	MSG_DISPLAY_TASK_STRING_DRAW			= 0x50000000,
	MSG_DISPLAY_TASK_LEFT_REC_TIME_DRAW		= 0x51000000,
	MSG_DISPLAY_TASK_LEFT_REC_TIME_CLEAR	= 0x52000000,
	MSG_DISPLAY_TASK_STRING_ICON_DRAW		= 0x53000000,
	MSG_DISPLAY_TASK_STRING_ICON_CLEAR		= 0x54000000,	
	MSG_DISPLAY_TASK_SETTING_EXIT			= 0x61000000,
	MSG_DISPLAY_TASK_USB_SETTING_DRAW		= 0x62000000
}TASK_DISPLAY_ENUM;

enum {
	ICON_BATTERY_0 = 1,
	ICON_BATTERY_1,
	ICON_BATTERY_2,
	ICON_BATTERY_3,
	ICON_BATTERY_4,
	ICON_CAPTURE,
	ICON_VIDEO_RECORD,
	ICON_PLAYBACK,
	ICON_BASE_SETTING,
	ICON_MOTION_DETECT,
	ICON_REC,
	ICON_VIDEOLAPASE_1S_R,
	ICON_VIDEOLAPASE_2S_R,
	ICON_VIDEOLAPASE_5S_R,
	ICON_VIDEOLAPASE_10S_R,
	ICON_VIDEOLAPASE_30S_R,
	ICON_VIDEOLAPASE_60S_R,
	ICON_CAP_MODE_3S_R,
	ICON_CAP_MODE_5S_R,
	ICON_CAP_MODE_10S_R,
	ICON_CAP_MODE_20S_R,
	ICON_REC_YELLOW,	
	ICON_VIDEOLAPASE_1S_Y,	
	ICON_VIDEOLAPASE_2S_Y,	
	ICON_VIDEOLAPASE_5S_Y,	
	ICON_VIDEOLAPASE_10S_Y,	
	ICON_VIDEOLAPASE_30S_Y,	
	ICON_VIDEOLAPASE_60S_Y,	
	ICON_CAP_MODE_3S_Y,	
	ICON_CAP_MODE_5S_Y,	
	ICON_CAP_MODE_10S_Y,	
	ICON_CAP_MODE_20S_Y,
	ICON_PLAY,				//for VGA
	ICON_PAUSE,				//for VGA
	ICON_MIC_OFF,
	ICON_MIC_ON,
	ICON_IR_ON,
	ICON_FOCUS,
	ICON_VIDEO,
	ICON_SD_CARD,
	ICON_INTERNAL_MEMORY,
	ICON_NO_SD_CARD,
	ICON_VIDEO_RECORD_CYC_OFF,
	ICON_VIDEO_RECORD_CYC_1MINUTE,
	ICON_VIDEO_RECORD_CYC_2MINUTE,
	ICON_VIDEO_RECORD_CYC_3MINUTE,
	ICON_VIDEO_RECORD_CYC_5MINUTE,
	ICON_VIDEO_RECORD_CYC_10MINUTE,
	ICON_VIDEO_RECORD_MOTION_10SECOND,
	ICON_1080P30,
	ICON_720P60,
	ICON_720P30,
	ICON_WVGA,
	ICON_VGA,
	ICON_VIDEO_EV6,
	ICON_VIDEO_EV5,
	ICON_VIDEO_EV4,
	ICON_VIDEO_EV3,
	ICON_VIDEO_EV2,
	ICON_VIDEO_EV1,
	ICON_VIDEO_EV0,
	ICON_VIDEO_EV_1,
	ICON_VIDEO_EV_2,
	ICON_VIDEO_EV_3,
	ICON_VIDEO_EV_4,
	ICON_VIDEO_EV_5,
	ICON_VIDEO_EV_6,
	ICON_VIDEO_LDW_SART,
	ICON_VIDEO_LDW_ACTIVE,
	ICON_USB_CONNECT,
	ICON_SCROLL_BAR,
	ICON_SCROLL_BAR_IDX,
	ICON_MP3_PLAY,			//27
	ICON_MP3_PAUSE,
	ICON_MP3_PLAY_ONE,
	ICON_MP3_PLAY_ALL,
	ICON_MP3_INDEX,
	ICON_MP3_VOLUME,
	ICON_MP3_MUTE,
	ICON_MP3_STOP,			//34
	ICON_BATTERY_CHARGED,
	ICON_LOCKED,
	ICON_LOCKED1,
	ICON_CAPTURE_EV6,
	ICON_CAPTURE_EV5,
	ICON_CAPTURE_EV4,
	ICON_CAPTURE_EV3,
	ICON_CAPTURE_EV2,
	ICON_CAPTURE_EV1,
	ICON_CAPTURE_EV0,
	ICON_CAPTURE_EV_1,
	ICON_CAPTURE_EV_2,
	ICON_CAPTURE_EV_3,
	ICON_CAPTURE_EV_4,
	ICON_CAPTURE_EV_5,
	ICON_CAPTURE_EV_6,
	ICON_CAPTURE_WHITE_BALANCE_AUTO,
	ICON_CAPTURE_WHITE_BALANCE_DAYLIGHT,
	ICON_CAPTURE_WHITE_BALANCE_CLOUDY,
	ICON_CAPTURE_WHITE_BALANCE_TUNGSTEN,
	ICON_CAPTURE_WHITE_BALANCE_FLUORESCENT,

	ICON_CAPTURE_ISO_AUTO,
	ICON_CAPTURE_ISO_100,
	ICON_CAPTURE_ISO_200,
	ICON_CAPTURE_ISO_400,
	
	ICON_CAPTURE_ANTI_SHAKING,
	ICON_CAPTURE_SEQUENCE,
	
	ICON_CAPTURE_QUALITY_FINE,
	ICON_CAPTURE_QUALITY_NORMAL,
	ICON_CAPTURE_QUALITY_ECONOMY,
	
	ICON_PLAYBACK_PLAY,
	ICON_PLAYBACK_PAUSE,
	ICON_PLAYBACK_MOVIE,
	
	
	ICON_PLAYBACK_VOLUME_TITLE,
	ICON_PLAYBACK_VOLUME_WHITE1,
	ICON_PLAYBACK_VOLUME_WHITE2,
	ICON_PLAYBACK_VOLUME_WHITE3,
	ICON_PLAYBACK_VOLUME_WHITE4,
	ICON_PLAYBACK_VOLUME_WHITE5,
	ICON_PLAYBACK_VOLUME_WHITE6,
	ICON_PLAYBACK_VOLUME_WHITE7,
	ICON_PLAYBACK_VOLUME_WHITE8,
	ICON_PLAYBACK_VOLUME_READ1,
	ICON_PLAYBACK_VOLUME_READ2,
	ICON_PLAYBACK_VOLUME_READ3,
	ICON_PLAYBACK_VOLUME_READ4,
	ICON_PLAYBACK_VOLUME_READ5,
	ICON_PLAYBACK_VOLUME_READ6,
	ICON_PLAYBACK_VOLUME_READ7,
	ICON_PLAYBACK_VOLUME_READ8,
	
	ICON_AUDIO_RECORD,
	ICON_2X,
	ICON_4X,
	ICON_FORWARD,
	ICON_BACKWARD,
	ICON_PLAY1,				//for pseudo 720P
	ICON_PAUSE1,			//for pseudo 720P
	ICOM_MAX_NUM
};

enum {
	NUM_TEXT_0,
	NUM_TEXT_1,
	NUM_TEXT_2,
	NUM_TEXT_3,
	NUM_TEXT_4,
	NUM_TEXT_5,
	NUM_TEXT_6,
	NUM_TEXT_7,
	NUM_TEXT_8,
	NUM_TEXT_9,
	NUM_TEXT_COLON,
	NUM_TEXT_SLASH,
	NUM_MAX
};

    enum {
//=== Multi-language string item must be the first one, above this line. ===
	STR_MULTI_LANGUAGE		,	//0
	STR_SETUP             ,	
	STR_RESOLUTION        ,	
	STR_EV		          ,	
	STR_MOTIONDETECT      ,	
	STR_LOOPRECORDING     ,	
	STR_VIDEOLAPSE        ,
	STR_WDR               ,	
	STR_RECORD_AUDIO      ,	
	STR_DATE_STAMP        ,	
	STR_RESOLUTION2       ,	
	STR_QUALITY           ,
	STR_SEQUENCE    	  ,//10
	STR_SHARPNESS         ,
	STR_ISO               ,
	STR_ANTI_SHAKING      ,
	STR_WHITE_BALANCE     ,
	//STR_QUICK_REVIEW      ,
	STR_FREQUENCY         ,
	STR_OSD_MODE          ,
	STR_SCREEN_SAVER      ,
	STR_ROTATE            ,
	STR_AUTO_POWER_OFF    ,
	STR_LANGUAGE          ,
	STR_BEEP_SOUND        ,	
	STR_DATE_TIME         ,
	STR_TV_SWITCH         ,	
#if TV_OUT_MENU
	STR_TV_MODE           ,
#endif
	STR_CAR_MODE          ,
	STR_WIFI_SSID         ,
	STR_WIFI_PASSWORD     ,
	STR_DELETE            ,
	//STR_PROTECT           ,
	STR_FORMAT1           ,
	STR_DEFAULT_SETTING   ,//30
	STR_VERSION           ,
	STR_1080FHD           ,	
	STR_1080P    	     ,	
	STR_720P	         ,	
	STR_WVGA              ,	
	STR_VGA				,	
	STR_QVGA              ,	
	STR_SINGLE            ,
	STR_3S_TIMER          ,
	STR_5S_TIMER          ,
	STR_10S_TIMER         ,
	STR_20S_TIMER         ,
	STR_OFF               ,	
	STR_1_SECOND          ,
	STR_2_SECOND          ,//40
	STR_5_SECOND          ,
	STR_10_SECOND         ,
	STR_30_SECOND         ,
	STR_1_MIN             ,		
	STR_OFF1              ,	
	STR_1_MIN1            ,		
	STR_2_MIN             ,
	STR_3_MIN             ,
	STR_5_MIN             ,
	STR_10_MIN            ,//50
	STR_OFF2              ,
	STR_ON                ,
	STR_12M               ,
	STR_10M               ,
	STR_8M                ,
	STR_5M                ,
	STR_3M                ,
	STR_2MHD              ,
	STR_1_3M              ,
	STR_1_M               ,//60
	STR_FINE              ,
	STR_NORMAL            ,
	STR_ECONOMY           ,
	STR_STRONG            ,
	STR_NORMAL1            ,
	STR_SOFT              ,
	STR_AUTO              ,
	STR_DAYLIGHT          ,
	STR_CLOUDY            ,
	STR_TUNGSTEN          ,//70
	STR_FLUORESCENT       ,
	STR_AUTO2              ,
	STR_ISO100            ,
	STR_ISO200            ,
	STR_ISO400            ,
	STR_P2_0              ,	
	STR_P5_3              ,	
	STR_P4_3              ,	
	STR_P1_0              ,	
	STR_P2_3              ,//80	
	STR_P1_3              ,
	STR_P0_0              ,	
	STR_N1_3              ,
	STR_N2_3              ,
	STR_N1_0              ,
	STR_N4_3              ,
	STR_N5_3              ,
	STR_N2_0              ,
	STR_OFF3			,
	STR_2_SECOND1         ,//90
	STR_5_SECOND1         ,
	STR_8_SECOND          ,
	STR_OFF90             ,	
	STR_1_MIN2            ,	
	STR_3_MIN1            ,
	STR_OFF91             ,	
	STR_3_MIN2            ,		
	STR_5_MIN2            ,
	STR_10_MIN2           ,
	STR_DELETE_CURRENT    ,//100
	STR_DELETE_ALL        ,
	STR_CANCEL            ,
	STR_OK                ,
	STR_LOCK_CURRENT      ,
	STR_UNLOCK_CURRENT    ,
	STR_LOCK_ALL          ,
	STR_UNLOCK_ALL        ,
	STR_NTSC              ,
	STR_PAL               ,
	STR_50HZ              ,//110
	STR_60HZ              ,
	STR_DEFAULT_SETTING_SHOW_1,
	STR_DEFAULT_SETTING_SHOW_2,
	STR_SD_CARD           ,
	STR_FORMAT_SHOW_1      ,
	STR_FORMAT_SHOW_2      ,
	STR_INSERT_SDC        ,
	STR_NO_SD           ,
	STR_MASS_STORAGE      ,
	STR_PC_CAMERA         ,//120
	STR_NO_MEDIA          ,	
	STR_BATTERY_LOW           ,
	STR_NUM0              ,
	STR_NUM1              ,
	STR_NUM2              ,
	STR_NUM3              ,
	STR_NUM4              ,
	STR_NUM5              ,
	STR_NUM6              ,
	STR_NUM7              ,//130
	STR_NUM8              ,
	STR_NUM9              ,
	STR_SD_FULL           ,
	STR_PLEASE_WAIT       ,
	STR_PROTECTED       ,
	STR_USB               ,
	STR_SDC_ERR			,
	STR_MAX
};

